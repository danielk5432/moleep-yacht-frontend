{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 15, "column": 0}, "map": {"version":3,"sources":["file:///Users/iseojin/Desktop/%E1%84%86%E1%85%A9%E1%86%AF%E1%84%8B%E1%85%B5%E1%86%B8%E1%84%8F%E1%85%A2%E1%86%B7%E1%84%91%E1%85%B3/week2/moleep-yacht-frontend/src/app/components/DiceRoller.tsx"],"sourcesContent":["'use client';\n\nimport React, { useEffect, useRef } from 'react';\nimport * as THREE from 'three';\nimport * as CANNON from 'cannon-es';\nimport { mergeGeometries, mergeVertices } from 'three/examples/jsm/utils/BufferGeometryUtils.js';\n\n\nconst DiceRoller: React.FC = () => {\n  const canvasRef = useRef<HTMLCanvasElement | null>(null);\n  const scoreRef = useRef<HTMLSpanElement | null>(null);\n\n  const rendererRef = useRef<THREE.WebGLRenderer>(null);\n  const sceneRef = useRef<THREE.Scene>(null);\n  const cameraRef = useRef<THREE.PerspectiveCamera>(null);\n  const diceMeshRef = useRef<THREE.Mesh>(null);\n  const physicsWorldRef = useRef<CANNON.World>(null);\n  const diceArrayRef = useRef<{ mesh: THREE.Object3D; body: CANNON.Body }[]>([]);\n\n  const params = {\n    numberOfDice: 5,\n    segments: 40,\n    edgeRadius: 0.07,\n    notchRadius: 0.15,\n    notchDepth: 0.1,\n  };\n\n  useEffect(() => {\n    const canvas = canvasRef.current;\n    const scoreResult = scoreRef.current;\n    if (!canvas || !scoreResult) return;\n\n    const renderer = new THREE.WebGLRenderer({ canvas, alpha: true, antialias: true });\n    renderer.shadowMap.enabled = true;\n    renderer.setPixelRatio(Math.min(window.devicePixelRatio, 2));\n    renderer.setSize(window.innerWidth, window.innerHeight);\n    rendererRef.current = renderer;\n\n    const scene = new THREE.Scene();\n    sceneRef.current = scene;\n\n    const camera = new THREE.PerspectiveCamera(45, window.innerWidth / window.innerHeight, 0.1, 300);\n    camera.position.set(0, 15, 10);\n    camera.up.set(0, 0, -1);\n    camera.lookAt(0, 0, 0);\n    cameraRef.current = camera;\n\n    const ambientLight = new THREE.AmbientLight(0xffffff, 3);\n    scene.add(ambientLight);\n\n    const topLight = new THREE.PointLight(0xffffff, 5);\n    topLight.position.set(10, 15, 0);\n    topLight.castShadow = true;\n    topLight.shadow.mapSize.width = 2048;\n    topLight.shadow.mapSize.height = 2048;\n    topLight.shadow.camera.near = 5;\n    topLight.shadow.camera.far = 400;\n\n    scene.add(topLight);\n    scene.background = new THREE.Color('#f0f0f0');\n\n    const physicsWorld = new CANNON.World({\n      allowSleep: true,\n      gravity: new CANNON.Vec3(0, -50, 0),\n    });\n    physicsWorld.defaultContactMaterial.restitution = 0.3;\n    physicsWorldRef.current = physicsWorld;\n\n    const floor = new THREE.Mesh(\n      new THREE.CircleGeometry(5, 64),\n      new THREE.MeshStandardMaterial({ color: 0x006600 }) // 초록색 felt 느낌\n    );\n    floor.receiveShadow = true;\n    floor.rotation.x = -Math.PI / 2;\n    floor.position.y = -7; \n    scene.add(floor);\n\n    const floorBody = new CANNON.Body({\n      type: CANNON.Body.STATIC,\n      shape: new CANNON.Plane(),\n    });\n    floorBody.position.copy(floor.position as any);\n    floorBody.quaternion.setFromEuler(-Math.PI / 2, 0, 0);\n    physicsWorld.addBody(floorBody);\n\n\n\n    const wallRadius = 5;\n    const wallHeight = 2;\n    const wallThickness = 0.3;\n\n    // 비어 있는 원기둥으로 벽을 생성\n    const wall = new CANNON.Body({ type: CANNON.Body.STATIC });\n    const segments = 32;\n\n    for (let i = 0; i < segments; i++) {\n      const theta = (2 * Math.PI * i) / segments;\n      const x = Math.cos(theta) * wallRadius;\n      const z = Math.sin(theta) * wallRadius;\n\n      const box = new CANNON.Box(new CANNON.Vec3(wallThickness / 2, wallHeight / 2, 0.2));\n      const quaternion = new CANNON.Quaternion();\n      quaternion.setFromEuler(0, -theta, 0);\n\n      wall.addShape(box, new CANNON.Vec3(x, wallHeight / 2 - 7, z), quaternion);\n    }\n\n    physicsWorld.addBody(wall);\n\n    const ring = new THREE.Mesh(\n      new THREE.RingGeometry(wallRadius - wallThickness, wallRadius + wallThickness, 64),\n      new THREE.MeshStandardMaterial({ color: 0x8b4513, side: THREE.DoubleSide }) // 갈색 나무\n    );\n    ring.rotation.x = -Math.PI / 2;\n    ring.position.y = -7 + 0.01; // 살짝 위로\n    scene.add(ring);\n\n    function createDiceTextures() {\n      const textures : THREE.Texture[] =  [];\n      const dotRadius = 10;\n      const size = 128;\n\n      const dotPositions = [\n        [[1, 1]],\n        [[0, 0], [2, 2]],\n        [[0, 0], [1, 1], [2, 2]],\n        [[0, 0], [0, 2], [2, 0], [2, 2]],\n        [[0, 0], [0, 2], [1, 1], [2, 0], [2, 2]],\n        [[0, 0], [0, 2], [1, 0], [1, 2], [2, 0], [2, 2]]\n      ];\n\n      for (let i = 0; i < 6; i++) {\n        const canvas = document.createElement('canvas');\n        canvas.width = canvas.height = size;\n        const ctx = canvas.getContext('2d')!;\n\n        ctx.fillStyle = '#ffffff';\n        ctx.fillRect(0, 0, size, size);\n\n        ctx.fillStyle = '#000000';\n        const spacing = size / 4;\n        for (const [row, col] of dotPositions[i]) {\n          ctx.beginPath();\n          ctx.arc(spacing * (col + 1), spacing * (row + 1), dotRadius, 0, Math.PI * 2);\n          ctx.fill();\n        }\n        const texture = new THREE.CanvasTexture(canvas);\n        textures.push(texture);\n      }\n\n      return textures;\n    }\n\n\n    function getTopFaceNumber(quaternion: THREE.Quaternion): number {\n      // 주사위의 로컬 Y+ 벡터 (윗면) → 월드 좌표계로 변환\n      const up = new THREE.Vector3(0, 1, 0).applyQuaternion(quaternion);\n\n      // 각 면의 노멀과 숫자 매핑\n      const faceNormals = [\n        { normal: new THREE.Vector3(1, 0, 0), number: 6 },   // +X → texture[0]\n        { normal: new THREE.Vector3(-1, 0, 0), number: 2 },  // -X → texture[1]\n        { normal: new THREE.Vector3(0, 1, 0), number: 3 },   // +Y → texture[2]\n        { normal: new THREE.Vector3(0, -1, 0), number: 4 },  // -Y → texture[3]\n        { normal: new THREE.Vector3(0, 0, 1), number: 5 },   // +Z → texture[4]\n        { normal: new THREE.Vector3(0, 0, -1), number: 1 }   // -Z → texture[5]\n      ];\n\n      // 가장 유사한 노멀 (코사인 유사도 기반)\n      let maxDot = -Infinity;\n      let topNumber = 0;\n\n      for (const face of faceNormals) {\n        const dot = up.dot(face.normal);\n        if (dot > maxDot) {\n          maxDot = dot;\n          topNumber = face.number;\n        }\n      }\n\n      return topNumber;\n    }\n\n    const createDiceMesh = () => {\n      const geometry = new THREE.BoxGeometry(1, 1, 1);\n      const textures = createDiceTextures();\n\n      const materials = textures.map(texture =>\n        new THREE.MeshStandardMaterial({\n          map: texture,\n          metalness: 0,\n          roughness: 0.3,\n          emissive: new THREE.Color(0xffffff),\n          emissiveIntensity: 0.1,\n        })\n      );\n\n      const mesh = new THREE.Mesh(geometry, materials);\n      mesh.castShadow = true;\n      return mesh;\n    };\n\n\n    const diceMesh = createDiceMesh();\n    diceMeshRef.current = diceMesh;\n\n    for (let i = 0; i < params.numberOfDice; i++) {\n      const mesh = diceMesh.clone();\n      scene.add(mesh);\n      const body = new CANNON.Body({\n        mass: 1,\n        shape: new CANNON.Box(new CANNON.Vec3(0.5, 0.5, 0.5)),\n        sleepTimeLimit: 0.1,\n      });\n      physicsWorld.addBody(body);\n      diceArrayRef.current.push({ mesh, body });\n    }\n    \n    let scored = false;\n\n    const render = () => {\n      physicsWorld.fixedStep();\n\n      let allSleeping = true;\n      for (const dice of diceArrayRef.current) {\n        dice.mesh.position.copy(dice.body.position);\n        dice.mesh.quaternion.copy(dice.body.quaternion);\n\n        if (dice.body.sleepState !== CANNON.Body.SLEEPING) {\n          allSleeping = false;\n        }\n      }\n\n      if (allSleeping && !scored) {\n        const scores = diceArrayRef.current.map(d => getTopFaceNumber(d.mesh.quaternion));\n        scoreRef.current!.innerHTML = scores.join(' + ') + ' = ' + scores.reduce((a, b) => a + b, 0);\n        scored = true;\n      }\n\n      renderer.render(scene, camera);\n      requestAnimationFrame(render);\n    };\n\n    const throwDice = () => {\n      scored = false;\n      if (!scoreResult) return;\n      scoreResult.innerHTML = '';\n      diceArrayRef.current.forEach((d, i) => {\n        d.body.velocity.setZero();\n        d.body.angularVelocity.setZero();\n        d.body.position = new CANNON.Vec3(6, i * 1.5, 0);\n        d.mesh.position.copy(d.body.position);\n        d.mesh.rotation.set(2 * Math.PI * Math.random(), 0, 2 * Math.PI * Math.random());\n\n        // ✅ three.js quaternion → cannon-es quaternion 변환\n        const threeQuat = d.mesh.quaternion;\n        d.body.quaternion.set(threeQuat.x, threeQuat.y, threeQuat.z, threeQuat.w);\n\n        const force = 3 + 5 * Math.random();\n        d.body.applyImpulse(new CANNON.Vec3(-force, force, 0), new CANNON.Vec3(0, 0, 0.2));\n        d.body.allowSleep = true;\n      });\n    };\n\n    window.addEventListener('resize', () => {\n      camera.aspect = window.innerWidth / window.innerHeight;\n      camera.updateProjectionMatrix();\n      renderer.setSize(window.innerWidth, window.innerHeight);\n    });\n\n    throwDice();\n    render();\n  }, []);\n\n  return (\n    <div>\n      <canvas ref={canvasRef} style={{ width: '100%', height: '300px' }} />\n      <div style={{ marginTop: 20, textAlign: 'center' }}>\n        Score: <span ref={scoreRef}></span>\n        <button onClick={() => window.location.reload()} style={{ marginLeft: 10 }}>Throw the Dice</button>\n      </div>\n    </div>\n  );\n};\n\nexport default DiceRoller;"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 417, "column": 0}, "map": {"version":3,"sources":["file:///Users/iseojin/Desktop/%E1%84%86%E1%85%A9%E1%86%AF%E1%84%8B%E1%85%B5%E1%86%B8%E1%84%8F%E1%85%A2%E1%86%B7%E1%84%91%E1%85%B3/week2/moleep-yacht-frontend/src/app/dice/page.tsx"],"sourcesContent":["'use client';\n// src/pages/Dice.tsx\nimport React from 'react';\nimport DiceRoller from '../components/DiceRoller';\n\nconst Dice: React.FC = () => {\n  return (\n    <div>\n      <h2>🎲 Dice Game</h2>\n      <DiceRoller />\n    </div>\n  );\n};\n\nexport default Dice;\n"],"names":[],"mappings":";;;;AAGA;AAHA;;;AAKA,MAAM,OAAiB;IACrB,qBACE,8OAAC;;0BACC,8OAAC;0BAAG;;;;;;0BACJ,8OAAC,uIAAA,CAAA,UAAU;;;;;;;;;;;AAGjB;uCAEe","debugId":null}}]
}