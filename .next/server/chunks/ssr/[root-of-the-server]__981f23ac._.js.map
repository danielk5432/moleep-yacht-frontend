{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 25, "column": 0}, "map": {"version":3,"sources":["file:///Users/iseojin/Desktop/%E1%84%86%E1%85%A9%E1%86%AF%E1%84%8B%E1%85%B5%E1%86%B8%E1%84%8F%E1%85%A2%E1%86%B7%E1%84%91%E1%85%B3/week2/moleep-yacht-frontend/src/utils/createDiceTextures.ts"],"sourcesContent":["import * as THREE from 'three';\n\nexport function createDiceTextures(baseColor: string = '#ffffff') {\n  const textures : THREE.Texture[] =  [];\n  const dotRadius = 10;\n  const size = 100;\n\n  const dotPositions = [\n    [[1, 1]],\n    [[0, 0], [0, 2], [1, 0], [1, 2], [2, 0], [2, 2]],\n    [[0, 0], [2, 2]],\n    [[0, 0], [0, 2], [1, 1], [2, 0], [2, 2]],\n    [[0, 0], [1, 1], [2, 2]],\n    [[0, 0], [0, 2], [2, 0], [2, 2]],\n  ];\n\n  for (let i = 0; i < 6; i++) {\n    const canvas = document.createElement('canvas');\n    canvas.width = canvas.height = size;\n    const ctx = canvas.getContext('2d')!;\n\n    ctx.fillStyle = baseColor; // ✅ 배경색\n    ctx.fillRect(0, 0, size, size);\n\n    ctx.fillStyle = '#000000';\n    const spacing = size / 4;\n    for (const [row, col] of dotPositions[i]) {\n      ctx.beginPath();\n      ctx.arc(spacing * (col + 1), spacing * (row + 1), dotRadius, 0, Math.PI * 2);\n      ctx.fill();\n    }\n\n    textures.push(new THREE.CanvasTexture(canvas));\n  }\n\n  return textures;\n}\n\n"],"names":[],"mappings":";;;AAAA;;;;;;AAEO,SAAS,mBAAmB,YAAoB,SAAS;IAC9D,MAAM,WAA8B,EAAE;IACtC,MAAM,YAAY;IAClB,MAAM,OAAO;IAEb,MAAM,eAAe;QACnB;YAAC;gBAAC;gBAAG;aAAE;SAAC;QACR;YAAC;gBAAC;gBAAG;aAAE;YAAE;gBAAC;gBAAG;aAAE;YAAE;gBAAC;gBAAG;aAAE;YAAE;gBAAC;gBAAG;aAAE;YAAE;gBAAC;gBAAG;aAAE;YAAE;gBAAC;gBAAG;aAAE;SAAC;QAChD;YAAC;gBAAC;gBAAG;aAAE;YAAE;gBAAC;gBAAG;aAAE;SAAC;QAChB;YAAC;gBAAC;gBAAG;aAAE;YAAE;gBAAC;gBAAG;aAAE;YAAE;gBAAC;gBAAG;aAAE;YAAE;gBAAC;gBAAG;aAAE;YAAE;gBAAC;gBAAG;aAAE;SAAC;QACxC;YAAC;gBAAC;gBAAG;aAAE;YAAE;gBAAC;gBAAG;aAAE;YAAE;gBAAC;gBAAG;aAAE;SAAC;QACxB;YAAC;gBAAC;gBAAG;aAAE;YAAE;gBAAC;gBAAG;aAAE;YAAE;gBAAC;gBAAG;aAAE;YAAE;gBAAC;gBAAG;aAAE;SAAC;KACjC;IAED,IAAK,IAAI,IAAI,GAAG,IAAI,GAAG,IAAK;QAC1B,MAAM,SAAS,SAAS,aAAa,CAAC;QACtC,OAAO,KAAK,GAAG,OAAO,MAAM,GAAG;QAC/B,MAAM,MAAM,OAAO,UAAU,CAAC;QAE9B,IAAI,SAAS,GAAG,WAAW,QAAQ;QACnC,IAAI,QAAQ,CAAC,GAAG,GAAG,MAAM;QAEzB,IAAI,SAAS,GAAG;QAChB,MAAM,UAAU,OAAO;QACvB,KAAK,MAAM,CAAC,KAAK,IAAI,IAAI,YAAY,CAAC,EAAE,CAAE;YACxC,IAAI,SAAS;YACb,IAAI,GAAG,CAAC,UAAU,CAAC,MAAM,CAAC,GAAG,UAAU,CAAC,MAAM,CAAC,GAAG,WAAW,GAAG,KAAK,EAAE,GAAG;YAC1E,IAAI,IAAI;QACV;QAEA,SAAS,IAAI,CAAC,IAAI,0GAAA,CAAA,gBAAmB,CAAC;IACxC;IAEA,OAAO;AACT","debugId":null}},
    {"offset": {"line": 160, "column": 0}, "map": {"version":3,"sources":["file:///Users/iseojin/Desktop/%E1%84%86%E1%85%A9%E1%86%AF%E1%84%8B%E1%85%B5%E1%86%B8%E1%84%8F%E1%85%A2%E1%86%B7%E1%84%91%E1%85%B3/week2/moleep-yacht-frontend/src/utils/generateDice.ts"],"sourcesContent":["// utils/generateDice.ts\nimport * as THREE from 'three';\nimport * as CANNON from 'cannon-es';\nimport { createDiceTextures } from './createDiceTextures';\nimport { Dice } from '../types/dice';\n\nexport function createDiceMesh(color: string): THREE.Mesh {\n  const geometry = new THREE.BoxGeometry(1, 1, 1);\n  const textures = createDiceTextures(color);\n\n  const materials = textures.map(texture =>\n    new THREE.MeshStandardMaterial({\n      map: texture,\n      metalness: 0,\n      roughness: 0.3,\n    })\n  );\n\n  const mesh = new THREE.Mesh(geometry, materials);\n  mesh.castShadow = true;\n  return mesh;\n}\n\nexport function generateDice(\n  numberOfDice: number,\n  scene: THREE.Scene,\n  physicsWorld: CANNON.World\n): Dice[] {\n  const diceColors = ['#ffffff', '#ffdddd', '#ddffdd', '#ddddff', '#ffffdd'];\n  const diceList: Dice[] = [];\n\n  for (let i = 0; i < numberOfDice; i++) {\n    const index = i % diceColors.length;\n    const mesh = createDiceMesh(diceColors[index]);\n    scene.add(mesh);\n\n    const body = new CANNON.Body({\n      mass: 1,\n      shape: new CANNON.Box(new CANNON.Vec3(0.5, 0.5, 0.5)),\n      sleepTimeLimit: 0.1,\n    });\n\n    const initialPosition = new CANNON.Vec3(6, i * 1.5, 0);\n    body.position.copy(initialPosition);\n    mesh.position.copy(initialPosition);\n\n    physicsWorld.addBody(body);\n\n    diceList.push({\n      id: i,\n      mesh,\n      body,\n      selected: false,\n      originalPosition: initialPosition.clone(),\n      stoppedPosition: undefined,\n      stoppedQuaternion: undefined,\n    });\n  }\n\n  return diceList;\n}\n"],"names":[],"mappings":"AAAA,wBAAwB;;;;;AACxB;AACA;AACA;;;;;;;;;AAGO,SAAS,eAAe,KAAa;IAC1C,MAAM,WAAW,IAAI,0GAAA,CAAA,cAAiB,CAAC,GAAG,GAAG;IAC7C,MAAM,WAAW,CAAA,GAAA,2HAAA,CAAA,qBAAkB,AAAD,EAAE;IAEpC,MAAM,YAAY,SAAS,GAAG,CAAC,CAAA,UAC7B,IAAI,0GAAA,CAAA,uBAA0B,CAAC;YAC7B,KAAK;YACL,WAAW;YACX,WAAW;QACb;IAGF,MAAM,OAAO,IAAI,0GAAA,CAAA,OAAU,CAAC,UAAU;IACtC,KAAK,UAAU,GAAG;IAClB,OAAO;AACT;AAEO,SAAS,aACd,YAAoB,EACpB,KAAkB,EAClB,YAA0B;IAE1B,MAAM,aAAa;QAAC;QAAW;QAAW;QAAW;QAAW;KAAU;IAC1E,MAAM,WAAmB,EAAE;IAE3B,IAAK,IAAI,IAAI,GAAG,IAAI,cAAc,IAAK;QACrC,MAAM,QAAQ,IAAI,WAAW,MAAM;QACnC,MAAM,OAAO,eAAe,UAAU,CAAC,MAAM;QAC7C,MAAM,GAAG,CAAC;QAEV,MAAM,OAAO,IAAI,iHAAA,CAAA,OAAW,CAAC;YAC3B,MAAM;YACN,OAAO,IAAI,iHAAA,CAAA,MAAU,CAAC,IAAI,iHAAA,CAAA,OAAW,CAAC,KAAK,KAAK;YAChD,gBAAgB;QAClB;QAEA,MAAM,kBAAkB,IAAI,iHAAA,CAAA,OAAW,CAAC,GAAG,IAAI,KAAK;QACpD,KAAK,QAAQ,CAAC,IAAI,CAAC;QACnB,KAAK,QAAQ,CAAC,IAAI,CAAC;QAEnB,aAAa,OAAO,CAAC;QAErB,SAAS,IAAI,CAAC;YACZ,IAAI;YACJ;YACA;YACA,UAAU;YACV,kBAAkB,gBAAgB,KAAK;YACvC,iBAAiB;YACjB,mBAAmB;QACrB;IACF;IAEA,OAAO;AACT","debugId":null}},
    {"offset": {"line": 229, "column": 0}, "map": {"version":3,"sources":["file:///Users/iseojin/Desktop/%E1%84%86%E1%85%A9%E1%86%AF%E1%84%8B%E1%85%B5%E1%86%B8%E1%84%8F%E1%85%A2%E1%86%B7%E1%84%91%E1%85%B3/week2/moleep-yacht-frontend/src/utils/getTopFaceNumber.ts"],"sourcesContent":["import * as THREE from 'three';\n\nexport function getTopFaceNumber(quaternion: THREE.Quaternion): number {\n    // 주사위의 로컬 Y+ 벡터 (윗면) → 월드 좌표계로 변환\n    const up = new THREE.Vector3(0, 1, 0);\n\n    // 각 면의 노멀과 숫자 매핑\n    const faceNormals = [\n    { normal: new THREE.Vector3(1, 0, 0), number: 1 },   // +X → texture[0]\n    { normal: new THREE.Vector3(-1, 0, 0), number: 6 },  // -X → texture[1]\n    { normal: new THREE.Vector3(0, 1, 0), number: 2 },   // +Y → texture[2]\n    { normal: new THREE.Vector3(0, -1, 0), number: 5 },  // -Y → texture[3]\n    { normal: new THREE.Vector3(0, 0, 1), number: 3 },   // +Z → texture[4]\n    { normal: new THREE.Vector3(0, 0, -1), number: 4 }   // -Z → texture[5]\n    ];\n\n    // 가장 유사한 노멀 (코사인 유사도 기반)\n    let maxDot = -Infinity;\n    let topNumber = 0;\n\n    for (const face of faceNormals) {\n    const dot = up.dot(face.normal.applyQuaternion(quaternion));\n    if (dot > maxDot) {\n        maxDot = dot;\n        topNumber = face.number;\n    }\n    }\n\n    return topNumber;\n}"],"names":[],"mappings":";;;AAAA;;;;;;AAEO,SAAS,iBAAiB,UAA4B;IACzD,kCAAkC;IAClC,MAAM,KAAK,IAAI,0GAAA,CAAA,UAAa,CAAC,GAAG,GAAG;IAEnC,iBAAiB;IACjB,MAAM,cAAc;QACpB;YAAE,QAAQ,IAAI,0GAAA,CAAA,UAAa,CAAC,GAAG,GAAG;YAAI,QAAQ;QAAE;QAChD;YAAE,QAAQ,IAAI,0GAAA,CAAA,UAAa,CAAC,CAAC,GAAG,GAAG;YAAI,QAAQ;QAAE;QACjD;YAAE,QAAQ,IAAI,0GAAA,CAAA,UAAa,CAAC,GAAG,GAAG;YAAI,QAAQ;QAAE;QAChD;YAAE,QAAQ,IAAI,0GAAA,CAAA,UAAa,CAAC,GAAG,CAAC,GAAG;YAAI,QAAQ;QAAE;QACjD;YAAE,QAAQ,IAAI,0GAAA,CAAA,UAAa,CAAC,GAAG,GAAG;YAAI,QAAQ;QAAE;QAChD;YAAE,QAAQ,IAAI,0GAAA,CAAA,UAAa,CAAC,GAAG,GAAG,CAAC;YAAI,QAAQ;QAAE,EAAI,kBAAkB;KACtE;IAED,yBAAyB;IACzB,IAAI,SAAS,CAAC;IACd,IAAI,YAAY;IAEhB,KAAK,MAAM,QAAQ,YAAa;QAChC,MAAM,MAAM,GAAG,GAAG,CAAC,KAAK,MAAM,CAAC,eAAe,CAAC;QAC/C,IAAI,MAAM,QAAQ;YACd,SAAS;YACT,YAAY,KAAK,MAAM;QAC3B;IACA;IAEA,OAAO;AACX","debugId":null}},
    {"offset": {"line": 287, "column": 0}, "map": {"version":3,"sources":["file:///Users/iseojin/Desktop/%E1%84%86%E1%85%A9%E1%86%AF%E1%84%8B%E1%85%B5%E1%86%B8%E1%84%8F%E1%85%A2%E1%86%B7%E1%84%91%E1%85%B3/week2/moleep-yacht-frontend/src/components/DiceRoller.tsx"],"sourcesContent":["'use client';\n\nimport React, { useEffect, useRef, useState} from 'react';\nimport * as THREE from 'three';\nimport * as CANNON from 'cannon-es';\nimport { Dice } from '../types/dice';\nimport { generateDice } from '../utils/generateDice';\nimport { getTopFaceNumber } from '../utils/getTopFaceNumber';\n\n\n\nconst DiceRoller: React.FC = () => {\n  const canvasRef = useRef<HTMLCanvasElement | null>(null);\n  const scoreRef = useRef<HTMLSpanElement | null>(null);\n\n  const rendererRef = useRef<THREE.WebGLRenderer>(null);\n  const sceneRef = useRef<THREE.Scene>(null);\n  const cameraRef = useRef<THREE.PerspectiveCamera>(null);\n  const diceMeshRef = useRef<THREE.Mesh>(null);\n  const physicsWorldRef = useRef<CANNON.World>(null);\n  const diceArrayRef = useRef<Dice[]>([]);\n  const [selectedMeshes, setSelectedMeshes] = useState<THREE.Mesh[]>([]);\n  const [selectedDiceMap, setSelectedDiceMap] = useState<Map<string, Dice>>(new Map());\n  const selectedCountRef = useRef(0); // 선택된 주사위 개수 추적\n  const selectedMeshRefs = useRef<THREE.Mesh[]>([]);\n  const selectedDiceMapRef = useRef<Map<string, Dice>>(new Map());\n\n  const [rollCount, setRollCount] = useState(0);\n  const maxRollCount = 3;\n\n\n  function getDynamicFixedPositions(n: number): THREE.Vector3[] {\n    const spacing = 1.5;\n    const startZ = -((n - 1) * spacing) / 2; // 중앙 정렬\n    const x = 6; // 오른쪽 정렬 기준 X 위치\n    const y = 0;\n\n    const positions: THREE.Vector3[] = [];\n    for (let i = 0; i < n; i++) {\n      positions.push(new THREE.Vector3(x, y, startZ + i * spacing));\n    }\n    return positions;\n  }\n\n  const throwDice = () => {\n    if (rollCount >= maxRollCount) return;\n\n    if (!scoreRef.current) return;\n    scoreRef.current.innerHTML = '';\n\n    diceArrayRef.current.forEach((d, i) => {\n      if (d.selected) return; \n\n      // ✅ FIX: 물리 타입을 DYNAMIC으로 리셋하여 다시 움직이게 합니다.\n      d.body.type = CANNON.Body.DYNAMIC;\n      d.body.allowSleep = true;\n\n      d.body.velocity.setZero();\n      d.body.angularVelocity.setZero();\n      d.mesh.position.copy(d.body.position as any);\n      const impulse = new CANNON.Vec3(\n        (Math.random() - 0.5) * 2,  // X 방향: 약간의 흔들림\n        20 + Math.random() * 5,     // Y 방향: 위쪽 강한 충격\n        (Math.random() - 0.5) * 2   // Z 방향: 약간의 흔들림\n      );\n      const contactPoint = new CANNON.Vec3(0, 0, 0.2); // 중심에서 약간 위쪽\n      const threeQuat = d.mesh.quaternion;\n      d.body.quaternion.set(threeQuat.x, threeQuat.y, threeQuat.z, threeQuat.w);\n      d.body.applyImpulse(impulse, contactPoint);\n      d.mesh.rotation.set(2 * Math.PI * Math.random(), 0, 2 * Math.PI * Math.random());\n      d.body.wakeUp(); \n    });\n\n    // 이 setTimeout 로직은 그대로 유지해도 괜찮습니다.\n\n    setRollCount(prev => prev + 1);\n  };\n\n  const handleResetAndThrow = () => {\n    setRollCount(1);\n    let i = 0\n    // 선택 상태 및 위치 초기화\n    for (const d of diceArrayRef.current) {\n      d.selected = false;\n      d.body.type = CANNON.Body.DYNAMIC;\n      d.body.allowSleep = true;\n      d.body.velocity.setZero();\n      d.body.angularVelocity.setZero();\n\n      // 초기 위치로 재배치\n      d.body.position = new CANNON.Vec3(4, i * 1.5, 0);\n      d.mesh.position.copy(d.body.position);\n      i += 1;\n      // 회전 무작위 설정\n      d.mesh.rotation.set(2 * Math.PI * Math.random(), 0, 2 * Math.PI * Math.random());\n      d.body.quaternion.setFromEuler(\n        d.mesh.rotation.x,\n        d.mesh.rotation.y,\n        d.mesh.rotation.z\n      );\n\n      // 무작위 임펄스 적용\n      const force = 3 + 5 * Math.random();\n      d.body.applyImpulse(\n        new CANNON.Vec3(-force, force, 0),\n        new CANNON.Vec3(0, 0, 0.2)\n      );\n\n      d.body.wakeUp();\n    }\n\n    // 선택 상태 리셋\n    selectedMeshRefs.current = [];\n    selectedDiceMapRef.current.clear();\n    setSelectedMeshes([]);\n    setSelectedDiceMap(new Map());\n    selectedCountRef.current = 0;\n\n    // 점수 지우기\n    if (scoreRef.current) {\n      scoreRef.current.innerHTML = '';\n    }\n  };\n\n  const params = {\n    numberOfDice: 5,\n    segments: 40,\n    edgeRadius: 0.07,\n    notchRadius: 0.15,\n    notchDepth: 0.1,\n  };\n\n  useEffect(() => {\n    const canvas = canvasRef.current;\n    const scoreResult = scoreRef.current;\n    if (!canvas || !scoreResult) return;\n\n    const renderer = new THREE.WebGLRenderer({ canvas, alpha: true, antialias: true });\n    renderer.shadowMap.enabled = true;\n    renderer.setPixelRatio(Math.min(window.devicePixelRatio, 2));\n    renderer.setSize(window.innerWidth, window.innerHeight - 100);\n    rendererRef.current = renderer;\n\n    const scene = new THREE.Scene();\n    sceneRef.current = scene;\n\n    const camera = new THREE.PerspectiveCamera(45, window.innerWidth / (window.innerHeight - 100), 0.1, 300);\n    camera.position.set(0, 15, 0);\n    camera.up.set(0, 0, -1);\n    camera.lookAt(0, 0, 0);\n    cameraRef.current = camera;\n\n    const ambientLight = new THREE.AmbientLight(0xffffff, 5);\n    scene.add(ambientLight);\n\n    const topLight = new THREE.PointLight(0xffffff, 3);\n    topLight.position.set(0, 15, 0);\n    topLight.castShadow = true;\n    topLight.shadow.mapSize.width = 2048;\n    topLight.shadow.mapSize.height = 2048;\n    topLight.shadow.camera.near = 5;\n    topLight.shadow.camera.far = 400;\n\n    scene.add(topLight);\n    scene.background = new THREE.Color('#f0f0f0');\n\n    const physicsWorld = new CANNON.World({\n      allowSleep: true,\n      gravity: new CANNON.Vec3(0, -50, 0),\n    });\n    physicsWorld.defaultContactMaterial.restitution = 0.3;\n    physicsWorldRef.current = physicsWorld;\n\n    const floor = new THREE.Mesh(\n      new THREE.CircleGeometry(5, 64),\n      new THREE.MeshStandardMaterial({ color: 0x006600 }) // 초록색 felt 느낌\n    );\n    floor.receiveShadow = true;\n    floor.rotation.x = -Math.PI / 2;\n    floor.position.y = -7; \n    scene.add(floor);\n\n    const floorBody = new CANNON.Body({\n      type: CANNON.Body.STATIC,\n      shape: new CANNON.Plane(),\n    });\n    floorBody.position.copy(floor.position as any);\n    floorBody.quaternion.setFromEuler(-Math.PI / 2, 0, 0);\n    physicsWorld.addBody(floorBody);\n\n    const wallRadius = 5;\n    const wallHeight = 7;\n    const wallThickness = 0.3;\n\n    // 비어 있는 원기둥으로 벽을 생성\n    const wall = new CANNON.Body({ type: CANNON.Body.STATIC });\n    const segments = 32;\n\n    for (let i = 0; i < segments; i++) {\n      const theta = (2 * Math.PI * i) / segments;\n      const x = Math.cos(theta) * wallRadius;\n      const z = Math.sin(theta) * wallRadius;\n\n      const box = new CANNON.Box(new CANNON.Vec3(wallThickness / 2, wallHeight / 2, 0.2));\n      const quaternion = new CANNON.Quaternion();\n      quaternion.setFromEuler(0, -theta, 0);\n\n      wall.addShape(box, new CANNON.Vec3(x, wallHeight / 2 - 7, z), quaternion);\n    }\n\n    physicsWorld.addBody(wall);\n\n    const ring = new THREE.Mesh(\n      new THREE.RingGeometry(wallRadius - wallThickness, wallRadius + wallThickness, 64),\n      new THREE.MeshStandardMaterial({ color: 0x8b4513, side: THREE.DoubleSide }) // 갈색 나무\n    );\n    ring.rotation.x = -Math.PI / 2;\n    ring.position.y = -7 + 0.01; // 살짝 위로\n    scene.add(ring);\n\n    const newDice = generateDice(params.numberOfDice, scene, physicsWorld); // generate DICE\n    diceArrayRef.current = newDice;\n\n    \n    let scored = false;\n\n    const render = () => {\n      physicsWorld.fixedStep();\n\n      let allSleeping = true;\n      let allArrived = true;\n\n      const speed = 0.5; // 한 프레임당 이동 거리\n\n      for (const dice of diceArrayRef.current) {\n        scored = false;\n        // 기존 위치/회전 복사\n        dice.mesh.position.copy(dice.body.position);\n        dice.mesh.quaternion.copy(dice.body.quaternion);\n\n        // 🔍 targetPosition 체크\n        if (dice.targetPosition) {\n          allArrived = false; // 아직 이동 중인 주사위 있음\n\n          const current = dice.mesh.position;\n          const target = dice.targetPosition;\n          const dist = current.distanceTo(target);\n\n          if (dist > 0.4) {\n            const direction = new THREE.Vector3().subVectors(target, current).normalize();\n            const move = direction.multiplyScalar(speed);\n\n            dice.mesh.position.add(move);\n            dice.body.position.copy(dice.mesh.position as any);\n          } else {\n            dice.mesh.position.copy(target);\n            dice.body.position.copy(new CANNON.Vec3(target.x, target.y, target.z));\n            dice.targetPosition = undefined;\n          }\n\n          dice.body.quaternion.copy(dice.body.quaternion);\n        }\n\n        // 💤 잠들었는지 체크\n        if (dice.body.sleepState !== CANNON.Body.SLEEPING) {\n          allSleeping = false;\n        }\n      }\n\n      \n      // 점수 표시\n      if (allSleeping && allArrived && !scored) {\n        const selectedDiceList = Array.from(selectedDiceMapRef.current.values());\n\n        if (selectedDiceList.length > 0) {\n          const scores = selectedDiceList.map(d => getTopFaceNumber(d.mesh.quaternion));\n          scoreRef.current!.innerHTML = scores.join(', ');\n          scored = true;\n        }else {\n          // 선택된 주사위가 없을 경우 점수 지우기\n          scoreRef.current!.innerHTML = '';\n        }\n      }\n\n      // 렌더링 반복\n      renderer.render(scene, camera);\n      requestAnimationFrame(render);\n    };\n\n\n    const initialThrow = () => {\n       if (rollCount >= maxRollCount) return;\n      scored = false;\n      if (!scoreResult) return;\n      scoreResult.innerHTML = '';\n      diceArrayRef.current.forEach((d, i) => {\n        if (d.selected) return; // 선택된 주사위는 고정\n\n        d.body.velocity.setZero();\n        d.body.angularVelocity.setZero();\n        d.body.position = new CANNON.Vec3(4, i * 1.5, 0);\n        d.mesh.position.copy(d.body.position);\n        d.mesh.rotation.set(2 * Math.PI * Math.random(), 0, 2 * Math.PI * Math.random());\n\n        const threeQuat = d.mesh.quaternion;\n        d.body.quaternion.set(threeQuat.x, threeQuat.y, threeQuat.z, threeQuat.w);\n\n        const force = 3 + 5 * Math.random();\n        d.body.applyImpulse(new CANNON.Vec3(-force, force, 0), new CANNON.Vec3(0, 0, 0.2));\n        d.body.allowSleep = true;\n        d.body.wakeUp(); // 반드시 wakeUp!\n      });\n\n      setRollCount(prev => prev + 1);\n    };\n\n    window.addEventListener('resize', () => {\n      camera.aspect = window.innerWidth / window.innerHeight;\n      camera.updateProjectionMatrix();\n      renderer.setSize(window.innerWidth, window.innerHeight);\n    });\n\n    initialThrow();\n    render();\n\n    const raycaster = new THREE.Raycaster();\n    const mouse = new THREE.Vector2();\n\n    function animateSingleDice(dice: Dice) {\n      let isRunning = true;\n\n      function animate() {\n        if (!isRunning) return;\n\n        // 회전 적용 (Three.js)\n        dice.mesh.rotation.y += 0.01;\n\n        // 필요 시, Cannon Body에도 반영\n        dice.body.quaternion.setFromEuler(\n          dice.mesh.rotation.x,\n          dice.mesh.rotation.y,\n          dice.mesh.rotation.z\n        );\n\n        requestAnimationFrame(animate);\n      }\n\n      animate();\n\n      // 나중에 멈추려면 외부에서 isRunning = false 설정\n    }\n\n\n    const onClick = (event: MouseEvent) => {\n      if (!canvasRef.current || !cameraRef.current || !physicsWorldRef.current) return;\n\n      const rect = canvasRef.current.getBoundingClientRect();\n      mouse.x = ((event.clientX - rect.left) / rect.width) * 2 - 1;\n      mouse.y = -((event.clientY - rect.top) / rect.height) * 2 + 1;\n\n      raycaster.setFromCamera(mouse, cameraRef.current);\n\n      // 모든 주사위 (선택 여부 관계없이)에 대해 교차 검사\n      const intersects = raycaster.intersectObjects(\n        diceArrayRef.current.map(d => d.mesh),\n        true\n      );\n\n      if (intersects.length === 0) return;\n\n      const clickedMesh = intersects[0].object as THREE.Mesh;\n\n      // 클릭된 메시가 어떤 Dice 객체에 해당하는지 찾음\n      const clickedDice = diceArrayRef.current.find(d => d.mesh === clickedMesh);\n\n      if (!clickedDice) return; // 클릭된 메시가 주사위가 아니면 리턴\n\n      if (clickedDice.selected) {\n        // 🎯 이미 선택된 주사위를 다시 클릭 → 원래 상태로 복원\n        console.log(\"Clicked on an already selected dice. Restoring it.\");\n\n        clickedDice.selected = false;\n\n        // 물리 바디를 다시 활성화 (DYNAMIC)\n        clickedDice.body.velocity.setZero();\n        clickedDice.body.angularVelocity.setZero();\n\n\n        const original = clickedDice.stoppedPosition;\n\n        if (original) {\n          clickedDice.targetPosition = new THREE.Vector3(original.x, original.y, original.z);\n        }\n        // 저장해 둔 물리 시뮬레이션이 멈춘 위치/회전으로 복원\n        if (clickedDice.stoppedQuaternion) {\n          clickedDice.body.quaternion.copy(new CANNON.Quaternion(\n            clickedDice.stoppedQuaternion.x,\n            clickedDice.stoppedQuaternion.y,\n            clickedDice.stoppedQuaternion.z,\n            clickedDice.stoppedQuaternion.w\n          ));\n        }\n        clickedDice.body.type = CANNON.Body.DYNAMIC;\n        clickedDice.body.allowSleep = true;\n        //clickedDice.body.wakeUp(); // 물리 시뮬레이션에 참여하도록 깨우기\n\n        setSelectedMeshes(prev => prev.filter(m => m.uuid !== clickedDice.mesh.uuid));\n        setSelectedDiceMap(prev => {\n          const map = new Map(prev);\n          map.delete(clickedDice.mesh.uuid);\n\n          // 위치 재정렬\n          const updated = Array.from(map.values());\n          const newPositions = getDynamicFixedPositions(updated.length);\n\n          updated.forEach((d, i) => {\n            d.targetPosition = newPositions[i];\n          });\n\n          selectedDiceMapRef.current = map;\n          return map;\n        });\n        selectedCountRef.current -= 1;\n\n      } else {\n        // 🎲 선택되지 않은 주사위를 클릭 → 선택된 위치로 이동\n        console.log(\"Clicked on an unselected dice. Selecting it.\");\n\n        // 주사위가 멈춰있을 때만 선택 가능하도록 (선택 시점의 최종 위치 저장)\n        if (clickedDice.body.sleepState !== CANNON.Body.SLEEPING) {\n          console.log(\"Dice is still moving, cannot select.\");\n          return;\n        }\n\n        clickedDice.selected = true;\n        clickedDice.stoppedPosition = clickedDice.mesh.position.clone(); // 물리 시뮬레이션이 멈춘 위치 저장\n        clickedDice.stoppedQuaternion = clickedDice.mesh.quaternion.clone(); // 물리 시뮬레이션이 멈춘 회전 저장\n\n        // 물리 바디를 STATIC으로 변경하여 물리 시뮬레이션의 영향을 받지 않도록 함\n        clickedDice.body.type = CANNON.Body.STATIC;\n        clickedDice.body.allowSleep = false; // 더 이상 슬립 상태가 되면 안됨\n\n        // 화면상에서 주사위를 고정된 위치로 직접 이동\n        const currentSelectedCount = selectedCountRef.current;\n        const updatedPositions = getDynamicFixedPositions(currentSelectedCount + 1);\n        Array.from(selectedDiceMapRef.current.values()).forEach((d, index) => {\n          d.targetPosition = updatedPositions[index];\n        });\n\n        clickedDice.targetPosition = updatedPositions[currentSelectedCount];\n\n        // 물리 바디의 회전도 메시와 동기화\n        clickedDice.body.quaternion.copy(new CANNON.Quaternion(\n            clickedDice.mesh.quaternion.x,\n            clickedDice.mesh.quaternion.y,\n            clickedDice.mesh.quaternion.z,\n            clickedDice.mesh.quaternion.w\n        ));\n\n\n        setSelectedMeshes(prev => [...prev, clickedDice.mesh]);\n        setSelectedDiceMap(prev => {\n          const map = new Map(prev);\n          map.set(clickedDice.mesh.uuid, clickedDice);\n          selectedDiceMapRef.current = map;\n          console.log(\"✅ selectedDiceMap에 추가됨:\", clickedDice.mesh.uuid);\n          return map;\n        });\n        \n        selectedCountRef.current += 1;\n      }\n    };\n\n    canvas.addEventListener('click', onClick);\n    return () => {\n      canvas.removeEventListener('click', onClick);\n    };\n\n  }, []);\n  return (\n    <div className=\"relative w-full h-screen\">\n      {/* 시뮬레이터 canvas 전체화면 */}\n      <canvas ref={canvasRef} className=\"absolute top-0 left-0 w-full h-full z-0\" />\n      <div className=\"absolute top-4 left-4 z-10 bg-white px-3 py-2 rounded shadow text-gray-800 font-medium\">\n        선택된 주사위: {selectedMeshes.length}개\n      </div>\n      {/* 점수 및 버튼 (optional) */}\n      <div className=\"absolute bottom-4 left-1/2 -translate-x-1/2 z-10 text-center\">\n        \n        <span ref={scoreRef} className=\"text-lg font-semibold bg-white px-4 py-2 rounded shadow\" />\n        <button\n          onClick={throwDice} // Change this from window.location.reload()\n          className=\"ml-4 px-4 py-2 bg-blue-500 text-white rounded shadow hover:bg-blue-600\"\n        >\n          Throw the Dice ({rollCount}/{maxRollCount})\n        </button>\n         <button\n          onClick={handleResetAndThrow}\n          className=\"ml-2 px-4 py-2 bg-green-500 text-white rounded shadow hover:bg-green-600\"\n        >\n          OK\n        </button>\n      </div> \n    </div>\n  );\n};\n\nexport default DiceRoller;"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 741, "column": 0}, "map": {"version":3,"sources":["file:///Users/iseojin/Desktop/%E1%84%86%E1%85%A9%E1%86%AF%E1%84%8B%E1%85%B5%E1%86%B8%E1%84%8F%E1%85%A2%E1%86%B7%E1%84%91%E1%85%B3/week2/moleep-yacht-frontend/src/pages/dice.tsx"],"sourcesContent":["'use client';\n// src/pages/Dice.tsx\nimport React from 'react';\nimport DiceRoller from '../components/DiceRoller';\n\nconst Dice: React.FC = () => {\n  return (\n    <div>\n      <h1 className = 'text-center'>🎲 Dice Game</h1>\n      <DiceRoller />\n    </div>\n  );\n};\n\nexport default Dice;\n"],"names":[],"mappings":";;;;AAGA;;;;;AAHA;;;AAKA,MAAM,OAAiB;IACrB,qBACE,qKAAC;;0BACC,qKAAC;gBAAG,WAAY;0BAAc;;;;;;0BAC9B,qKAAC,yHAAA,CAAA,UAAU;;;;;;;;;;;AAGjB;uCAEe","debugId":null}},
    {"offset": {"line": 783, "column": 0}, "map": {"version":3,"sources":["file:///Users/iseojin/Desktop/%E1%84%86%E1%85%A9%E1%86%AF%E1%84%8B%E1%85%B5%E1%86%B8%E1%84%8F%E1%85%A2%E1%86%B7%E1%84%91%E1%85%B3/week2/moleep-yacht-frontend/node_modules/next/dist/src/server/route-modules/pages/module.compiled.js"],"sourcesContent":["if (process.env.NEXT_RUNTIME === 'edge') {\n  module.exports = require('next/dist/server/route-modules/pages/module.js')\n} else {\n  if (process.env.NODE_ENV === 'development') {\n    if (process.env.TURBOPACK) {\n      module.exports = require('next/dist/compiled/next-server/pages-turbo.runtime.dev.js')\n    } else {\n      module.exports = require('next/dist/compiled/next-server/pages.runtime.dev.js')\n    }\n  } else {\n    if (process.env.TURBOPACK) {\n      module.exports = require('next/dist/compiled/next-server/pages-turbo.runtime.prod.js')\n    } else {\n      module.exports = require('next/dist/compiled/next-server/pages.runtime.prod.js')\n    }\n  }\n}\n"],"names":["process","env","NEXT_RUNTIME","module","exports","require","NODE_ENV","TURBOPACK"],"mappings":"AAAA,IAAIA,QAAQC,GAAG,CAACC,YAAY,KAAK,MAAQ;;AAEzC,OAAO;IACL,IAAIF,QAAQC,GAAG,CAACK,QAAQ,KAAK,WAAe;QAC1C,IAAIN,QAAQC,GAAG,CAACM,SAAS,eAAE;YACzBJ,OAAOC,OAAO,GAAGC,QAAQ;QAC3B,OAAO;;QAEP;IACF,OAAO;;IAMP;AACF","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 802, "column": 0}, "map": {"version":3,"sources":["file:///Users/iseojin/Desktop/%E1%84%86%E1%85%A9%E1%86%AF%E1%84%8B%E1%85%B5%E1%86%B8%E1%84%8F%E1%85%A2%E1%86%B7%E1%84%91%E1%85%B3/week2/moleep-yacht-frontend/node_modules/next/dist/src/server/route-kind.ts"],"sourcesContent":["export const enum RouteKind {\n  /**\n   * `PAGES` represents all the React pages that are under `pages/`.\n   */\n  PAGES = 'PAGES',\n  /**\n   * `PAGES_API` represents all the API routes under `pages/api/`.\n   */\n  PAGES_API = 'PAGES_API',\n  /**\n   * `APP_PAGE` represents all the React pages that are under `app/` with the\n   * filename of `page.{j,t}s{,x}`.\n   */\n  APP_PAGE = 'APP_PAGE',\n  /**\n   * `APP_ROUTE` represents all the API routes and metadata routes that are under `app/` with the\n   * filename of `route.{j,t}s{,x}`.\n   */\n  APP_ROUTE = 'APP_ROUTE',\n\n  /**\n   * `IMAGE` represents all the images that are generated by `next/image`.\n   */\n  IMAGE = 'IMAGE',\n}\n"],"names":["RouteKind"],"mappings":";;;AAAO,IAAWA,YAAAA,WAAAA,GAAAA,SAAAA,SAAAA;IAChB;;GAEC,GAAA,SAAA,CAAA,QAAA,GAAA;IAED;;GAEC,GAAA,SAAA,CAAA,YAAA,GAAA;IAED;;;GAGC,GAAA,SAAA,CAAA,WAAA,GAAA;IAED;;;GAGC,GAAA,SAAA,CAAA,YAAA,GAAA;IAGD;;GAEC,GAAA,SAAA,CAAA,QAAA,GAAA;WAtBeA;MAwBjB","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 831, "column": 0}, "map": {"version":3,"sources":["file:///Users/iseojin/Desktop/%E1%84%86%E1%85%A9%E1%86%AF%E1%84%8B%E1%85%B5%E1%86%B8%E1%84%8F%E1%85%A2%E1%86%B7%E1%84%91%E1%85%B3/week2/moleep-yacht-frontend/node_modules/next/dist/src/build/templates/helpers.ts"],"sourcesContent":["/**\n * Hoists a name from a module or promised module.\n *\n * @param module the module to hoist the name from\n * @param name the name to hoist\n * @returns the value on the module (or promised module)\n */\nexport function hoist(module: any, name: string) {\n  // If the name is available in the module, return it.\n  if (name in module) {\n    return module[name]\n  }\n\n  // If a property called `then` exists, assume it's a promise and\n  // return a promise that resolves to the name.\n  if ('then' in module && typeof module.then === 'function') {\n    return module.then((mod: any) => hoist(mod, name))\n  }\n\n  // If we're trying to hoise the default export, and the module is a function,\n  // return the module itself.\n  if (typeof module === 'function' && name === 'default') {\n    return module\n  }\n\n  // Otherwise, return undefined.\n  return undefined\n}\n"],"names":["hoist","module","name","then","mod","undefined"],"mappings":"AAAA;;;;;;CAMC,GACD;;;AAAO,SAASA,MAAMC,MAAW,EAAEC,IAAY;IAC7C,qDAAqD;IACrD,IAAIA,QAAQD,QAAQ;QAClB,OAAOA,MAAM,CAACC,KAAK;IACrB;IAEA,gEAAgE;IAChE,8CAA8C;IAC9C,IAAI,UAAUD,UAAU,OAAOA,OAAOE,IAAI,KAAK,YAAY;QACzD,OAAOF,OAAOE,IAAI,CAAC,CAACC,MAAaJ,MAAMI,KAAKF;IAC9C;IAEA,6EAA6E;IAC7E,4BAA4B;IAC5B,IAAI,OAAOD,WAAW,cAAcC,SAAS,WAAW;QACtD,OAAOD;IACT;IAEA,+BAA+B;IAC/B,OAAOI;AACT","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 864, "column": 0}, "map": {"version":3,"sources":["file:///Users/iseojin/Desktop/%E1%84%86%E1%85%A9%E1%86%AF%E1%84%8B%E1%85%B5%E1%86%B8%E1%84%8F%E1%85%A2%E1%86%B7%E1%84%91%E1%85%B3/week2/moleep-yacht-frontend/node_modules/next/dist/src/build/templates/pages.ts"],"sourcesContent":["import { PagesRouteModule } from '../../server/route-modules/pages/module.compiled'\nimport { RouteKind } from '../../server/route-kind'\nimport { hoist } from './helpers'\n\n// Import the app and document modules.\nimport * as document from 'VAR_MODULE_DOCUMENT'\nimport * as app from 'VAR_MODULE_APP'\n\n// Import the userland code.\nimport * as userland from 'VAR_USERLAND'\n\n// Re-export the component (should be the default export).\nexport default hoist(userland, 'default')\n\n// Re-export methods.\nexport const getStaticProps = hoist(userland, 'getStaticProps')\nexport const getStaticPaths = hoist(userland, 'getStaticPaths')\nexport const getServerSideProps = hoist(userland, 'getServerSideProps')\nexport const config = hoist(userland, 'config')\nexport const reportWebVitals = hoist(userland, 'reportWebVitals')\n\n// Re-export legacy methods.\nexport const unstable_getStaticProps = hoist(\n  userland,\n  'unstable_getStaticProps'\n)\nexport const unstable_getStaticPaths = hoist(\n  userland,\n  'unstable_getStaticPaths'\n)\nexport const unstable_getStaticParams = hoist(\n  userland,\n  'unstable_getStaticParams'\n)\nexport const unstable_getServerProps = hoist(\n  userland,\n  'unstable_getServerProps'\n)\nexport const unstable_getServerSideProps = hoist(\n  userland,\n  'unstable_getServerSideProps'\n)\n\n// Create and export the route module that will be consumed.\nexport const routeModule = new PagesRouteModule({\n  definition: {\n    kind: RouteKind.PAGES,\n    page: 'VAR_DEFINITION_PAGE',\n    pathname: 'VAR_DEFINITION_PATHNAME',\n    // The following aren't used in production.\n    bundlePath: '',\n    filename: '',\n  },\n  components: {\n    // default export might not exist when optimized for data only\n    App: app.default,\n    Document: document.default,\n  },\n  userland,\n})\n"],"names":["PagesRouteModule","RouteKind","hoist","document","app","userland","getStaticProps","getStaticPaths","getServerSideProps","config","reportWebVitals","unstable_getStaticProps","unstable_getStaticPaths","unstable_getStaticParams","unstable_getServerProps","unstable_getServerSideProps","routeModule","definition","kind","PAGES","page","pathname","bundlePath","filename","components","App","default","Document"],"mappings":";;;;;;;;;;;;;;AAAA,SAASA,gBAAgB,QAAQ,mDAAkD;AACnF,SAASC,SAAS,QAAQ,0BAAyB;AACnD,SAASC,KAAK,QAAQ,YAAW;AAEjC,uCAAuC;AACvC,YAAYC,cAAc,sBAAqB;AAC/C,YAAYC,SAAS,iBAAgB;AAErC,4BAA4B;AAC5B,YAAYC,cAAc,eAAc;;;;;;;;;;;yMAGzBH,QAAAA,EAAMG,gHAAU,WAAU;AAGlC,MAAMC,mLAAiBJ,QAAAA,EAAMG,gHAAU,kBAAiB;AACxD,MAAME,mLAAiBL,QAAAA,EAAMG,gHAAU,kBAAiB;AACxD,MAAMG,uLAAqBN,QAAAA,EAAMG,gHAAU,sBAAqB;AAChE,MAAMI,SAASP,0KAAAA,EAAMG,gHAAU,UAAS;AACxC,MAAMK,oLAAkBR,QAAAA,EAAMG,gHAAU,mBAAkB;AAG1D,MAAMM,0BAA0BT,0KAAAA,EACrCG,gHACA,2BACD;AACM,MAAMO,4LAA0BV,QAAAA,EACrCG,gHACA,2BACD;AACM,MAAMQ,2BAA2BX,0KAAAA,EACtCG,gHACA,4BACD;AACM,MAAMS,4LAA0BZ,QAAAA,EACrCG,gHACA,2BACD;AACM,MAAMU,gMAA8Bb,QAAAA,EACzCG,gHACA,+BACD;AAGM,MAAMW,cAAc,8LAAIhB,mBAAAA,CAAiB;IAC9CiB,YAAY;QACVC,MAAMjB,oKAAAA,CAAUkB,KAAK;QACrBC,MAAM;QACNC,UAAU;QACV,2CAA2C;QAC3CC,YAAY;QACZC,UAAU;IACZ;IACAC,YAAY;QACV,8DAA8D;QAC9DC,oHAAKrB,IAAIsB,MAAO;QAChBC,oIAAUxB,SAASuB,CAAO;IAC5B;cACArB;AACF,GAAE","ignoreList":[0],"debugId":null}}]
}