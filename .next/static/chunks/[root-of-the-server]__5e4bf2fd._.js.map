{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["turbopack:///[turbopack]/browser/dev/hmr-client/hmr-client.ts"],"sourcesContent":["/// <reference path=\"../../../shared/runtime-types.d.ts\" />\n/// <reference path=\"../../runtime/base/dev-globals.d.ts\" />\n/// <reference path=\"../../runtime/base/dev-protocol.d.ts\" />\n/// <reference path=\"../../runtime/base/dev-extensions.ts\" />\n\ntype SendMessage = (msg: any) => void;\nexport type WebSocketMessage =\n  | {\n      type: \"turbopack-connected\";\n    }\n  | {\n      type: \"turbopack-message\";\n      data: Record<string, any>;\n    };\n\n\nexport type ClientOptions = {\n  addMessageListener: (cb: (msg: WebSocketMessage) => void) => void;\n  sendMessage: SendMessage;\n  onUpdateError: (err: unknown) => void;\n};\n\nexport function connect({\n  addMessageListener,\n  sendMessage,\n  onUpdateError = console.error,\n}: ClientOptions) {\n  addMessageListener((msg) => {\n    switch (msg.type) {\n      case \"turbopack-connected\":\n        handleSocketConnected(sendMessage);\n        break;\n      default:\n        try {\n          if (Array.isArray(msg.data)) {\n            for (let i = 0; i < msg.data.length; i++) {\n              handleSocketMessage(msg.data[i] as ServerMessage);\n            }\n          } else {\n            handleSocketMessage(msg.data as ServerMessage);\n          }\n          applyAggregatedUpdates();\n        } catch (e: unknown) {\n          console.warn(\n            \"[Fast Refresh] performing full reload\\n\\n\" +\n              \"Fast Refresh will perform a full reload when you edit a file that's imported by modules outside of the React rendering tree.\\n\" +\n              \"You might have a file which exports a React component but also exports a value that is imported by a non-React component file.\\n\" +\n              \"Consider migrating the non-React component export to a separate file and importing it into both files.\\n\\n\" +\n              \"It is also possible the parent component of the component you edited is a class component, which disables Fast Refresh.\\n\" +\n              \"Fast Refresh requires at least one parent function component in your React tree.\"\n          );\n          onUpdateError(e);\n          location.reload();\n        }\n        break;\n    }\n  });\n\n  const queued = globalThis.TURBOPACK_CHUNK_UPDATE_LISTENERS;\n  if (queued != null && !Array.isArray(queued)) {\n    throw new Error(\"A separate HMR handler was already registered\");\n  }\n  globalThis.TURBOPACK_CHUNK_UPDATE_LISTENERS = {\n    push: ([chunkPath, callback]: [ChunkListPath, UpdateCallback]) => {\n      subscribeToChunkUpdate(chunkPath, sendMessage, callback);\n    },\n  };\n\n  if (Array.isArray(queued)) {\n    for (const [chunkPath, callback] of queued) {\n      subscribeToChunkUpdate(chunkPath, sendMessage, callback);\n    }\n  }\n}\n\ntype UpdateCallbackSet = {\n  callbacks: Set<UpdateCallback>;\n  unsubscribe: () => void;\n};\n\nconst updateCallbackSets: Map<ResourceKey, UpdateCallbackSet> = new Map();\n\nfunction sendJSON(sendMessage: SendMessage, message: ClientMessage) {\n  sendMessage(JSON.stringify(message));\n}\n\ntype ResourceKey = string;\n\nfunction resourceKey(resource: ResourceIdentifier): ResourceKey {\n  return JSON.stringify({\n    path: resource.path,\n    headers: resource.headers || null,\n  });\n}\n\nfunction subscribeToUpdates(\n  sendMessage: SendMessage,\n  resource: ResourceIdentifier\n): () => void {\n  sendJSON(sendMessage, {\n    type: \"turbopack-subscribe\",\n    ...resource,\n  });\n\n  return () => {\n    sendJSON(sendMessage, {\n      type: \"turbopack-unsubscribe\",\n      ...resource,\n    });\n  };\n}\n\nfunction handleSocketConnected(sendMessage: SendMessage) {\n  for (const key of updateCallbackSets.keys()) {\n    subscribeToUpdates(sendMessage, JSON.parse(key));\n  }\n}\n\n// we aggregate all pending updates until the issues are resolved\nconst chunkListsWithPendingUpdates: Map<ResourceKey, PartialServerMessage> =\n  new Map();\n\nfunction aggregateUpdates(msg: PartialServerMessage) {\n  const key = resourceKey(msg.resource);\n  let aggregated = chunkListsWithPendingUpdates.get(key);\n\n  if (aggregated) {\n    aggregated.instruction = mergeChunkListUpdates(\n      aggregated.instruction,\n      msg.instruction\n    );\n  } else {\n    chunkListsWithPendingUpdates.set(key, msg);\n  }\n}\n\nfunction applyAggregatedUpdates() {\n  if (chunkListsWithPendingUpdates.size === 0) return;\n  hooks.beforeRefresh();\n  for (const msg of chunkListsWithPendingUpdates.values()) {\n    triggerUpdate(msg);\n  }\n  chunkListsWithPendingUpdates.clear();\n  finalizeUpdate();\n}\n\nfunction mergeChunkListUpdates(\n  updateA: ChunkListUpdate,\n  updateB: ChunkListUpdate\n): ChunkListUpdate {\n  let chunks;\n  if (updateA.chunks != null) {\n    if (updateB.chunks == null) {\n      chunks = updateA.chunks;\n    } else {\n      chunks = mergeChunkListChunks(updateA.chunks, updateB.chunks);\n    }\n  } else if (updateB.chunks != null) {\n    chunks = updateB.chunks;\n  }\n\n  let merged;\n  if (updateA.merged != null) {\n    if (updateB.merged == null) {\n      merged = updateA.merged;\n    } else {\n      // Since `merged` is an array of updates, we need to merge them all into\n      // one, consistent update.\n      // Since there can only be `EcmascriptMergeUpdates` in the array, there is\n      // no need to key on the `type` field.\n      let update = updateA.merged[0];\n      for (let i = 1; i < updateA.merged.length; i++) {\n        update = mergeChunkListEcmascriptMergedUpdates(\n          update,\n          updateA.merged[i]\n        );\n      }\n\n      for (let i = 0; i < updateB.merged.length; i++) {\n        update = mergeChunkListEcmascriptMergedUpdates(\n          update,\n          updateB.merged[i]\n        );\n      }\n\n      merged = [update];\n    }\n  } else if (updateB.merged != null) {\n    merged = updateB.merged;\n  }\n\n  return {\n    type: \"ChunkListUpdate\",\n    chunks,\n    merged,\n  };\n}\n\nfunction mergeChunkListChunks(\n  chunksA: Record<ChunkPath, ChunkUpdate>,\n  chunksB: Record<ChunkPath, ChunkUpdate>\n): Record<ChunkPath, ChunkUpdate> {\n  const chunks: Record<ChunkPath, ChunkUpdate> = {};\n\n  for (const [chunkPath, chunkUpdateA] of Object.entries(chunksA) as Array<[ChunkPath, ChunkUpdate]>) {\n    const chunkUpdateB = chunksB[chunkPath];\n    if (chunkUpdateB != null) {\n      const mergedUpdate = mergeChunkUpdates(chunkUpdateA, chunkUpdateB);\n      if (mergedUpdate != null) {\n        chunks[chunkPath] = mergedUpdate;\n      }\n    } else {\n      chunks[chunkPath] = chunkUpdateA;\n    }\n  }\n\n  for (const [chunkPath, chunkUpdateB] of Object.entries(chunksB) as Array<[ChunkPath, ChunkUpdate]>) {\n    if (chunks[chunkPath] == null) {\n      chunks[chunkPath] = chunkUpdateB;\n    }\n  }\n\n  return chunks;\n}\n\nfunction mergeChunkUpdates(\n  updateA: ChunkUpdate,\n  updateB: ChunkUpdate\n): ChunkUpdate | undefined {\n  if (\n    (updateA.type === \"added\" && updateB.type === \"deleted\") ||\n    (updateA.type === \"deleted\" && updateB.type === \"added\")\n  ) {\n    return undefined;\n  }\n\n  if (updateA.type === \"partial\") {\n    invariant(updateA.instruction, \"Partial updates are unsupported\");\n  }\n\n  if (updateB.type === \"partial\") {\n    invariant(updateB.instruction, \"Partial updates are unsupported\");\n  }\n\n  return undefined;\n}\n\nfunction mergeChunkListEcmascriptMergedUpdates(\n  mergedA: EcmascriptMergedUpdate,\n  mergedB: EcmascriptMergedUpdate\n): EcmascriptMergedUpdate {\n  const entries = mergeEcmascriptChunkEntries(mergedA.entries, mergedB.entries);\n  const chunks = mergeEcmascriptChunksUpdates(mergedA.chunks, mergedB.chunks);\n\n  return {\n    type: \"EcmascriptMergedUpdate\",\n    entries,\n    chunks,\n  };\n}\n\nfunction mergeEcmascriptChunkEntries(\n  entriesA: Record<ModuleId, EcmascriptModuleEntry> | undefined,\n  entriesB: Record<ModuleId, EcmascriptModuleEntry> | undefined\n): Record<ModuleId, EcmascriptModuleEntry> {\n  return { ...entriesA, ...entriesB };\n}\n\nfunction mergeEcmascriptChunksUpdates(\n  chunksA: Record<ChunkPath, EcmascriptMergedChunkUpdate> | undefined,\n  chunksB: Record<ChunkPath, EcmascriptMergedChunkUpdate> | undefined\n): Record<ChunkPath, EcmascriptMergedChunkUpdate> | undefined {\n  if (chunksA == null) {\n    return chunksB;\n  }\n\n  if (chunksB == null) {\n    return chunksA;\n  }\n\n  const chunks: Record<ChunkPath, EcmascriptMergedChunkUpdate> = {};\n\n  for (const [chunkPath, chunkUpdateA] of Object.entries(chunksA) as Array<[ChunkPath, EcmascriptMergedChunkUpdate]>) {\n    const chunkUpdateB = chunksB[chunkPath];\n    if (chunkUpdateB != null) {\n      const mergedUpdate = mergeEcmascriptChunkUpdates(\n        chunkUpdateA,\n        chunkUpdateB\n      );\n      if (mergedUpdate != null) {\n        chunks[chunkPath] = mergedUpdate;\n      }\n    } else {\n      chunks[chunkPath] = chunkUpdateA;\n    }\n  }\n\n  for (const [chunkPath, chunkUpdateB] of Object.entries(chunksB) as Array<[ChunkPath, EcmascriptMergedChunkUpdate]>) {\n    if (chunks[chunkPath] == null) {\n      chunks[chunkPath] = chunkUpdateB;\n    }\n  }\n\n  if (Object.keys(chunks).length === 0) {\n    return undefined;\n  }\n\n  return chunks;\n}\n\nfunction mergeEcmascriptChunkUpdates(\n  updateA: EcmascriptMergedChunkUpdate,\n  updateB: EcmascriptMergedChunkUpdate\n): EcmascriptMergedChunkUpdate | undefined {\n  if (updateA.type === \"added\" && updateB.type === \"deleted\") {\n    // These two completely cancel each other out.\n    return undefined;\n  }\n\n  if (updateA.type === \"deleted\" && updateB.type === \"added\") {\n    const added = [];\n    const deleted = [];\n    const deletedModules = new Set(updateA.modules ?? []);\n    const addedModules = new Set(updateB.modules ?? []);\n\n    for (const moduleId of addedModules) {\n      if (!deletedModules.has(moduleId)) {\n        added.push(moduleId);\n      }\n    }\n\n    for (const moduleId of deletedModules) {\n      if (!addedModules.has(moduleId)) {\n        deleted.push(moduleId);\n      }\n    }\n\n    if (added.length === 0 && deleted.length === 0) {\n      return undefined;\n    }\n\n    return {\n      type: \"partial\",\n      added,\n      deleted,\n    };\n  }\n\n  if (updateA.type === \"partial\" && updateB.type === \"partial\") {\n    const added = new Set([...(updateA.added ?? []), ...(updateB.added ?? [])]);\n    const deleted = new Set([\n      ...(updateA.deleted ?? []),\n      ...(updateB.deleted ?? []),\n    ]);\n\n    if (updateB.added != null) {\n      for (const moduleId of updateB.added) {\n        deleted.delete(moduleId);\n      }\n    }\n\n    if (updateB.deleted != null) {\n      for (const moduleId of updateB.deleted) {\n        added.delete(moduleId);\n      }\n    }\n\n    return {\n      type: \"partial\",\n      added: [...added],\n      deleted: [...deleted],\n    };\n  }\n\n  if (updateA.type === \"added\" && updateB.type === \"partial\") {\n    const modules = new Set([\n      ...(updateA.modules ?? []),\n      ...(updateB.added ?? []),\n    ]);\n\n    for (const moduleId of updateB.deleted ?? []) {\n      modules.delete(moduleId);\n    }\n\n    return {\n      type: \"added\",\n      modules: [...modules],\n    };\n  }\n\n  if (updateA.type === \"partial\" && updateB.type === \"deleted\") {\n    // We could eagerly return `updateB` here, but this would potentially be\n    // incorrect if `updateA` has added modules.\n\n    const modules = new Set(updateB.modules ?? []);\n\n    if (updateA.added != null) {\n      for (const moduleId of updateA.added) {\n        modules.delete(moduleId);\n      }\n    }\n\n    return {\n      type: \"deleted\",\n      modules: [...modules],\n    };\n  }\n\n  // Any other update combination is invalid.\n\n  return undefined;\n}\n\nfunction invariant(_: never, message: string): never {\n  throw new Error(`Invariant: ${message}`);\n}\n\nconst CRITICAL = [\"bug\", \"error\", \"fatal\"];\n\nfunction compareByList(list: any[], a: any, b: any) {\n  const aI = list.indexOf(a) + 1 || list.length;\n  const bI = list.indexOf(b) + 1 || list.length;\n  return aI - bI;\n}\n\nconst chunksWithIssues: Map<ResourceKey, Issue[]> = new Map();\n\nfunction emitIssues() {\n  const issues = [];\n  const deduplicationSet = new Set();\n\n  for (const [_, chunkIssues] of chunksWithIssues) {\n    for (const chunkIssue of chunkIssues) {\n      if (deduplicationSet.has(chunkIssue.formatted)) continue;\n\n      issues.push(chunkIssue);\n      deduplicationSet.add(chunkIssue.formatted);\n    }\n  }\n\n  sortIssues(issues);\n\n  hooks.issues(issues);\n}\n\nfunction handleIssues(msg: ServerMessage): boolean {\n  const key = resourceKey(msg.resource);\n  let hasCriticalIssues = false;\n\n  for (const issue of msg.issues) {\n    if (CRITICAL.includes(issue.severity)) {\n      hasCriticalIssues = true;\n    }\n  }\n\n  if (msg.issues.length > 0) {\n    chunksWithIssues.set(key, msg.issues);\n  } else if (chunksWithIssues.has(key)) {\n    chunksWithIssues.delete(key);\n  }\n\n  emitIssues();\n\n  return hasCriticalIssues;\n}\n\nconst SEVERITY_ORDER = [\"bug\", \"fatal\", \"error\", \"warning\", \"info\", \"log\"];\nconst CATEGORY_ORDER = [\n  \"parse\",\n  \"resolve\",\n  \"code generation\",\n  \"rendering\",\n  \"typescript\",\n  \"other\",\n];\n\nfunction sortIssues(issues: Issue[]) {\n  issues.sort((a, b) => {\n    const first = compareByList(SEVERITY_ORDER, a.severity, b.severity);\n    if (first !== 0) return first;\n    return compareByList(CATEGORY_ORDER, a.category, b.category);\n  });\n}\n\nconst hooks = {\n  beforeRefresh: () => {},\n  refresh: () => {},\n  buildOk: () => {},\n  issues: (_issues: Issue[]) => {},\n};\n\nexport function setHooks(newHooks: typeof hooks) {\n  Object.assign(hooks, newHooks);\n}\n\nfunction handleSocketMessage(msg: ServerMessage) {\n  sortIssues(msg.issues);\n\n  handleIssues(msg);\n\n  switch (msg.type) {\n    case \"issues\":\n      // issues are already handled\n      break;\n    case \"partial\":\n      // aggregate updates\n      aggregateUpdates(msg);\n      break;\n    default:\n      // run single update\n      const runHooks = chunkListsWithPendingUpdates.size === 0;\n      if (runHooks) hooks.beforeRefresh();\n      triggerUpdate(msg);\n      if (runHooks) finalizeUpdate();\n      break;\n  }\n}\n\nfunction finalizeUpdate() {\n  hooks.refresh();\n  hooks.buildOk();\n\n  // This is used by the Next.js integration test suite to notify it when HMR\n  // updates have been completed.\n  // TODO: Only run this in test environments (gate by `process.env.__NEXT_TEST_MODE`)\n  if (globalThis.__NEXT_HMR_CB) {\n    globalThis.__NEXT_HMR_CB();\n    globalThis.__NEXT_HMR_CB = null;\n  }\n}\n\nfunction subscribeToChunkUpdate(\n  chunkListPath: ChunkListPath,\n  sendMessage: SendMessage,\n  callback: UpdateCallback\n): () => void {\n  return subscribeToUpdate(\n    {\n      path: chunkListPath,\n    },\n    sendMessage,\n    callback\n  );\n}\n\nexport function subscribeToUpdate(\n  resource: ResourceIdentifier,\n  sendMessage: SendMessage,\n  callback: UpdateCallback\n) {\n  const key = resourceKey(resource);\n  let callbackSet: UpdateCallbackSet;\n  const existingCallbackSet = updateCallbackSets.get(key);\n  if (!existingCallbackSet) {\n    callbackSet = {\n      callbacks: new Set([callback]),\n      unsubscribe: subscribeToUpdates(sendMessage, resource),\n    };\n    updateCallbackSets.set(key, callbackSet);\n  } else {\n    existingCallbackSet.callbacks.add(callback);\n    callbackSet = existingCallbackSet;\n  }\n\n  return () => {\n    callbackSet.callbacks.delete(callback);\n\n    if (callbackSet.callbacks.size === 0) {\n      callbackSet.unsubscribe();\n      updateCallbackSets.delete(key);\n    }\n  };\n}\n\nfunction triggerUpdate(msg: ServerMessage) {\n  const key = resourceKey(msg.resource);\n  const callbackSet = updateCallbackSets.get(key);\n  if (!callbackSet) {\n    return;\n  }\n\n  for (const callback of callbackSet.callbacks) {\n    callback(msg);\n  }\n\n  if (msg.type === \"notFound\") {\n    // This indicates that the resource which we subscribed to either does not exist or\n    // has been deleted. In either case, we should clear all update callbacks, so if a\n    // new subscription is created for the same resource, it will send a new \"subscribe\"\n    // message to the server.\n    // No need to send an \"unsubscribe\" message to the server, it will have already\n    // dropped the update stream before sending the \"notFound\" message.\n    updateCallbackSets.delete(key);\n  }\n}\n"],"names":[],"mappings":"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","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 469, "column": 0}, "map": {"version":3,"sources":["file:///Users/iseojin/Desktop/%E1%84%86%E1%85%A9%E1%86%AF%E1%84%8B%E1%85%B5%E1%86%B8%E1%84%8F%E1%85%A2%E1%86%B7%E1%84%91%E1%85%B3/week2/moleep-yacht-frontend/src/utils/createDiceTextures.ts"],"sourcesContent":["import * as THREE from 'three';\n\nexport function createDiceTextures(baseColor: string = '#ffffff') {\n  const textures : THREE.Texture[] =  [];\n  const dotRadius = 10;\n  const size = 100;\n\n  const dotPositions = [\n    [[1, 1]],\n    [[0, 0], [0, 2], [1, 0], [1, 2], [2, 0], [2, 2]],\n    [[0, 0], [2, 2]],\n    [[0, 0], [0, 2], [1, 1], [2, 0], [2, 2]],\n    [[0, 0], [1, 1], [2, 2]],\n    [[0, 0], [0, 2], [2, 0], [2, 2]],\n  ];\n\n  for (let i = 0; i < 6; i++) {\n    const canvas = document.createElement('canvas');\n    canvas.width = canvas.height = size;\n    const ctx = canvas.getContext('2d')!;\n\n    ctx.fillStyle = baseColor; // ✅ 배경색\n    ctx.fillRect(0, 0, size, size);\n\n    ctx.fillStyle = '#000000';\n    const spacing = size / 4;\n    for (const [row, col] of dotPositions[i]) {\n      ctx.beginPath();\n      ctx.arc(spacing * (col + 1), spacing * (row + 1), dotRadius, 0, Math.PI * 2);\n      ctx.fill();\n    }\n\n    textures.push(new THREE.CanvasTexture(canvas));\n  }\n\n  return textures;\n}\n\n"],"names":[],"mappings":";;;AAAA;;AAEO,SAAS,mBAAmB,YAAoB,SAAS;IAC9D,MAAM,WAA8B,EAAE;IACtC,MAAM,YAAY;IAClB,MAAM,OAAO;IAEb,MAAM,eAAe;QACnB;YAAC;gBAAC;gBAAG;aAAE;SAAC;QACR;YAAC;gBAAC;gBAAG;aAAE;YAAE;gBAAC;gBAAG;aAAE;YAAE;gBAAC;gBAAG;aAAE;YAAE;gBAAC;gBAAG;aAAE;YAAE;gBAAC;gBAAG;aAAE;YAAE;gBAAC;gBAAG;aAAE;SAAC;QAChD;YAAC;gBAAC;gBAAG;aAAE;YAAE;gBAAC;gBAAG;aAAE;SAAC;QAChB;YAAC;gBAAC;gBAAG;aAAE;YAAE;gBAAC;gBAAG;aAAE;YAAE;gBAAC;gBAAG;aAAE;YAAE;gBAAC;gBAAG;aAAE;YAAE;gBAAC;gBAAG;aAAE;SAAC;QACxC;YAAC;gBAAC;gBAAG;aAAE;YAAE;gBAAC;gBAAG;aAAE;YAAE;gBAAC;gBAAG;aAAE;SAAC;QACxB;YAAC;gBAAC;gBAAG;aAAE;YAAE;gBAAC;gBAAG;aAAE;YAAE;gBAAC;gBAAG;aAAE;YAAE;gBAAC;gBAAG;aAAE;SAAC;KACjC;IAED,IAAK,IAAI,IAAI,GAAG,IAAI,GAAG,IAAK;QAC1B,MAAM,SAAS,SAAS,aAAa,CAAC;QACtC,OAAO,KAAK,GAAG,OAAO,MAAM,GAAG;QAC/B,MAAM,MAAM,OAAO,UAAU,CAAC;QAE9B,IAAI,SAAS,GAAG,WAAW,QAAQ;QACnC,IAAI,QAAQ,CAAC,GAAG,GAAG,MAAM;QAEzB,IAAI,SAAS,GAAG;QAChB,MAAM,UAAU,OAAO;QACvB,KAAK,MAAM,CAAC,KAAK,IAAI,IAAI,YAAY,CAAC,EAAE,CAAE;YACxC,IAAI,SAAS;YACb,IAAI,GAAG,CAAC,UAAU,CAAC,MAAM,CAAC,GAAG,UAAU,CAAC,MAAM,CAAC,GAAG,WAAW,GAAG,KAAK,EAAE,GAAG;YAC1E,IAAI,IAAI;QACV;QAEA,SAAS,IAAI,CAAC,IAAI,2IAAA,CAAA,gBAAmB,CAAC;IACxC;IAEA,OAAO;AACT","debugId":null}},
    {"offset": {"line": 602, "column": 0}, "map": {"version":3,"sources":["file:///Users/iseojin/Desktop/%E1%84%86%E1%85%A9%E1%86%AF%E1%84%8B%E1%85%B5%E1%86%B8%E1%84%8F%E1%85%A2%E1%86%B7%E1%84%91%E1%85%B3/week2/moleep-yacht-frontend/src/utils/generateDice.ts"],"sourcesContent":["// utils/generateDice.ts\nimport * as THREE from 'three';\nimport * as CANNON from 'cannon-es';\nimport { createDiceTextures } from './createDiceTextures';\nimport { Dice } from '../types/dice';\n\nexport function createDiceMesh(color: string): THREE.Mesh {\n  const geometry = new THREE.BoxGeometry(1, 1, 1);\n  const textures = createDiceTextures(color);\n\n  const materials = textures.map(texture =>\n    new THREE.MeshStandardMaterial({\n      map: texture,\n      metalness: 0,\n      roughness: 0.3,\n    })\n  );\n\n  const mesh = new THREE.Mesh(geometry, materials);\n  mesh.castShadow = true;\n  return mesh;\n}\n\nexport function generateDice(\n  numberOfDice: number,\n  scene: THREE.Scene,\n  physicsWorld: CANNON.World\n): Dice[] {\n  const diceColors = ['#ffffff', '#ffdddd', '#ddffdd', '#ddddff', '#ffffdd'];\n  const diceList: Dice[] = [];\n\n  for (let i = 0; i < numberOfDice; i++) {\n    const index = i % diceColors.length;\n    const mesh = createDiceMesh(diceColors[index]);\n    scene.add(mesh);\n\n    const body = new CANNON.Body({\n      mass: 1,\n      shape: new CANNON.Box(new CANNON.Vec3(0.5, 0.5, 0.5)),\n      sleepTimeLimit: 0.1,\n    });\n\n    const initialPosition = new CANNON.Vec3(6, i * 1.5, 0);\n    body.position.copy(initialPosition);\n    mesh.position.copy(initialPosition);\n\n    physicsWorld.addBody(body);\n\n    diceList.push({\n      id: i,\n      mesh,\n      body,\n      selected: false,\n      originalPosition: initialPosition.clone(),\n      stoppedPosition: undefined,\n      stoppedQuaternion: undefined,\n    });\n  }\n\n  return diceList;\n}\n"],"names":[],"mappings":"AAAA,wBAAwB;;;;;AACxB;AACA;AACA;;;;AAGO,SAAS,eAAe,KAAa;IAC1C,MAAM,WAAW,IAAI,2IAAA,CAAA,cAAiB,CAAC,GAAG,GAAG;IAC7C,MAAM,WAAW,CAAA,GAAA,8HAAA,CAAA,qBAAkB,AAAD,EAAE;IAEpC,MAAM,YAAY,SAAS,GAAG,CAAC,CAAA,UAC7B,IAAI,2IAAA,CAAA,uBAA0B,CAAC;YAC7B,KAAK;YACL,WAAW;YACX,WAAW;QACb;IAGF,MAAM,OAAO,IAAI,2IAAA,CAAA,OAAU,CAAC,UAAU;IACtC,KAAK,UAAU,GAAG;IAClB,OAAO;AACT;AAEO,SAAS,aACd,YAAoB,EACpB,KAAkB,EAClB,YAA0B;IAE1B,MAAM,aAAa;QAAC;QAAW;QAAW;QAAW;QAAW;KAAU;IAC1E,MAAM,WAAmB,EAAE;IAE3B,IAAK,IAAI,IAAI,GAAG,IAAI,cAAc,IAAK;QACrC,MAAM,QAAQ,IAAI,WAAW,MAAM;QACnC,MAAM,OAAO,eAAe,UAAU,CAAC,MAAM;QAC7C,MAAM,GAAG,CAAC;QAEV,MAAM,OAAO,IAAI,gJAAA,CAAA,OAAW,CAAC;YAC3B,MAAM;YACN,OAAO,IAAI,gJAAA,CAAA,MAAU,CAAC,IAAI,gJAAA,CAAA,OAAW,CAAC,KAAK,KAAK;YAChD,gBAAgB;QAClB;QAEA,MAAM,kBAAkB,IAAI,gJAAA,CAAA,OAAW,CAAC,GAAG,IAAI,KAAK;QACpD,KAAK,QAAQ,CAAC,IAAI,CAAC;QACnB,KAAK,QAAQ,CAAC,IAAI,CAAC;QAEnB,aAAa,OAAO,CAAC;QAErB,SAAS,IAAI,CAAC;YACZ,IAAI;YACJ;YACA;YACA,UAAU;YACV,kBAAkB,gBAAgB,KAAK;YACvC,iBAAiB;YACjB,mBAAmB;QACrB;IACF;IAEA,OAAO;AACT","debugId":null}},
    {"offset": {"line": 668, "column": 0}, "map": {"version":3,"sources":["file:///Users/iseojin/Desktop/%E1%84%86%E1%85%A9%E1%86%AF%E1%84%8B%E1%85%B5%E1%86%B8%E1%84%8F%E1%85%A2%E1%86%B7%E1%84%91%E1%85%B3/week2/moleep-yacht-frontend/src/utils/getTopFaceNumber.ts"],"sourcesContent":["import * as THREE from 'three';\n\nexport function getTopFaceNumber(quaternion: THREE.Quaternion): number {\n    // 주사위의 로컬 Y+ 벡터 (윗면) → 월드 좌표계로 변환\n    const up = new THREE.Vector3(0, 1, 0);\n\n    // 각 면의 노멀과 숫자 매핑\n    const faceNormals = [\n    { normal: new THREE.Vector3(1, 0, 0), number: 1 },   // +X → texture[0]\n    { normal: new THREE.Vector3(-1, 0, 0), number: 6 },  // -X → texture[1]\n    { normal: new THREE.Vector3(0, 1, 0), number: 2 },   // +Y → texture[2]\n    { normal: new THREE.Vector3(0, -1, 0), number: 5 },  // -Y → texture[3]\n    { normal: new THREE.Vector3(0, 0, 1), number: 3 },   // +Z → texture[4]\n    { normal: new THREE.Vector3(0, 0, -1), number: 4 }   // -Z → texture[5]\n    ];\n\n    // 가장 유사한 노멀 (코사인 유사도 기반)\n    let maxDot = -Infinity;\n    let topNumber = 0;\n\n    for (const face of faceNormals) {\n    const dot = up.dot(face.normal.applyQuaternion(quaternion));\n    if (dot > maxDot) {\n        maxDot = dot;\n        topNumber = face.number;\n    }\n    }\n\n    return topNumber;\n}"],"names":[],"mappings":";;;AAAA;;AAEO,SAAS,iBAAiB,UAA4B;IACzD,kCAAkC;IAClC,MAAM,KAAK,IAAI,2IAAA,CAAA,UAAa,CAAC,GAAG,GAAG;IAEnC,iBAAiB;IACjB,MAAM,cAAc;QACpB;YAAE,QAAQ,IAAI,2IAAA,CAAA,UAAa,CAAC,GAAG,GAAG;YAAI,QAAQ;QAAE;QAChD;YAAE,QAAQ,IAAI,2IAAA,CAAA,UAAa,CAAC,CAAC,GAAG,GAAG;YAAI,QAAQ;QAAE;QACjD;YAAE,QAAQ,IAAI,2IAAA,CAAA,UAAa,CAAC,GAAG,GAAG;YAAI,QAAQ;QAAE;QAChD;YAAE,QAAQ,IAAI,2IAAA,CAAA,UAAa,CAAC,GAAG,CAAC,GAAG;YAAI,QAAQ;QAAE;QACjD;YAAE,QAAQ,IAAI,2IAAA,CAAA,UAAa,CAAC,GAAG,GAAG;YAAI,QAAQ;QAAE;QAChD;YAAE,QAAQ,IAAI,2IAAA,CAAA,UAAa,CAAC,GAAG,GAAG,CAAC;YAAI,QAAQ;QAAE,EAAI,kBAAkB;KACtE;IAED,yBAAyB;IACzB,IAAI,SAAS,CAAC;IACd,IAAI,YAAY;IAEhB,KAAK,MAAM,QAAQ,YAAa;QAChC,MAAM,MAAM,GAAG,GAAG,CAAC,KAAK,MAAM,CAAC,eAAe,CAAC;QAC/C,IAAI,MAAM,QAAQ;YACd,SAAS;YACT,YAAY,KAAK,MAAM;QAC3B;IACA;IAEA,OAAO;AACX","debugId":null}},
    {"offset": {"line": 724, "column": 0}, "map": {"version":3,"sources":["file:///Users/iseojin/Desktop/%E1%84%86%E1%85%A9%E1%86%AF%E1%84%8B%E1%85%B5%E1%86%B8%E1%84%8F%E1%85%A2%E1%86%B7%E1%84%91%E1%85%B3/week2/moleep-yacht-frontend/src/components/DiceRoller.tsx"],"sourcesContent":["'use client';\n\nimport React, { useEffect, useRef, useState} from 'react';\nimport * as THREE from 'three';\nimport * as CANNON from 'cannon-es';\nimport { Dice } from '../types/dice';\nimport { generateDice } from '../utils/generateDice';\nimport { getTopFaceNumber } from '../utils/getTopFaceNumber';\n\n\n\nconst DiceRoller: React.FC = () => {\n  const canvasRef = useRef<HTMLCanvasElement | null>(null);\n  const scoreRef = useRef<HTMLSpanElement | null>(null);\n\n  const rendererRef = useRef<THREE.WebGLRenderer>(null);\n  const sceneRef = useRef<THREE.Scene>(null);\n  const cameraRef = useRef<THREE.PerspectiveCamera>(null);\n  const diceMeshRef = useRef<THREE.Mesh>(null);\n  const physicsWorldRef = useRef<CANNON.World>(null);\n  const diceArrayRef = useRef<Dice[]>([]);\n  const [selectedMeshes, setSelectedMeshes] = useState<THREE.Mesh[]>([]);\n  const [selectedDiceMap, setSelectedDiceMap] = useState<Map<string, Dice>>(new Map());\n  const selectedCountRef = useRef(0); // 선택된 주사위 개수 추적\n  const selectedMeshRefs = useRef<THREE.Mesh[]>([]);\n  const selectedDiceMapRef = useRef<Map<string, Dice>>(new Map());\n\n  const [rollCount, setRollCount] = useState(0);\n  const maxRollCount = 3;\n\n\n  function getDynamicFixedPositions(n: number): THREE.Vector3[] {\n    const spacing = 1.5;\n    const startZ = -((n - 1) * spacing) / 2; // 중앙 정렬\n    const x = 6; // 오른쪽 정렬 기준 X 위치\n    const y = 0;\n\n    const positions: THREE.Vector3[] = [];\n    for (let i = 0; i < n; i++) {\n      positions.push(new THREE.Vector3(x, y, startZ + i * spacing));\n    }\n    return positions;\n  }\n\n  const throwDice = () => {\n    if (rollCount >= maxRollCount) return;\n\n    if (!scoreRef.current) return;\n    scoreRef.current.innerHTML = '';\n\n    diceArrayRef.current.forEach((d, i) => {\n      if (d.selected) return; \n\n      // ✅ FIX: 물리 타입을 DYNAMIC으로 리셋하여 다시 움직이게 합니다.\n      d.body.type = CANNON.Body.DYNAMIC;\n      d.body.allowSleep = true;\n\n      d.body.velocity.setZero();\n      d.body.angularVelocity.setZero();\n      d.mesh.position.copy(d.body.position as any);\n      const impulse = new CANNON.Vec3(\n        (Math.random() - 0.5) * 2,  // X 방향: 약간의 흔들림\n        20 + Math.random() * 5,     // Y 방향: 위쪽 강한 충격\n        (Math.random() - 0.5) * 2   // Z 방향: 약간의 흔들림\n      );\n      const contactPoint = new CANNON.Vec3(0, 0, 0.2); // 중심에서 약간 위쪽\n      const threeQuat = d.mesh.quaternion;\n      d.body.quaternion.set(threeQuat.x, threeQuat.y, threeQuat.z, threeQuat.w);\n      d.body.applyImpulse(impulse, contactPoint);\n      d.mesh.rotation.set(2 * Math.PI * Math.random(), 0, 2 * Math.PI * Math.random());\n      d.body.wakeUp(); \n    });\n\n    // 이 setTimeout 로직은 그대로 유지해도 괜찮습니다.\n\n    setRollCount(prev => prev + 1);\n  };\n\n  const handleResetAndThrow = () => {\n    setRollCount(1);\n    let i = 0\n    // 선택 상태 및 위치 초기화\n    for (const d of diceArrayRef.current) {\n      d.selected = false;\n      d.body.type = CANNON.Body.DYNAMIC;\n      d.body.allowSleep = true;\n      d.body.velocity.setZero();\n      d.body.angularVelocity.setZero();\n\n      // 초기 위치로 재배치\n      d.body.position = new CANNON.Vec3(4, i * 1.5, 0);\n      d.mesh.position.copy(d.body.position);\n      i += 1;\n      // 회전 무작위 설정\n      d.mesh.rotation.set(2 * Math.PI * Math.random(), 0, 2 * Math.PI * Math.random());\n      d.body.quaternion.setFromEuler(\n        d.mesh.rotation.x,\n        d.mesh.rotation.y,\n        d.mesh.rotation.z\n      );\n      // 무작위 임펄스 적용\n      const force = 3 + 5 * Math.random();\n      d.body.applyImpulse(\n        new CANNON.Vec3(-force, force, 0),\n        new CANNON.Vec3(0, 0, 0.2)\n      );\n\n      d.body.wakeUp();\n    }\n\n    // 선택 상태 리셋\n    selectedMeshRefs.current = [];\n    selectedDiceMapRef.current.clear();\n    setSelectedMeshes([]);\n    setSelectedDiceMap(new Map());\n    selectedCountRef.current = 0;\n\n    // 점수 지우기\n    if (scoreRef.current) {\n      scoreRef.current.innerHTML = '';\n    }\n  };\n\n  const params = {\n    numberOfDice: 5,\n    segments: 40,\n    edgeRadius: 0.07,\n    notchRadius: 0.15,\n    notchDepth: 0.1,\n  };\n\n  useEffect(() => {\n    const canvas = canvasRef.current;\n    const scoreResult = scoreRef.current;\n    if (!canvas || !scoreResult) return;\n\n    const renderer = new THREE.WebGLRenderer({ canvas, alpha: true, antialias: true });\n    renderer.shadowMap.enabled = true;\n    renderer.setPixelRatio(Math.min(window.devicePixelRatio, 2));\n    renderer.setSize(window.innerWidth, window.innerHeight - 100);\n    rendererRef.current = renderer;\n\n    const scene = new THREE.Scene();\n    sceneRef.current = scene;\n\n    const camera = new THREE.PerspectiveCamera(45, window.innerWidth / (window.innerHeight - 100), 0.1, 300);\n    camera.position.set(0, 15, 0);\n    camera.up.set(0, 0, -1);\n    camera.lookAt(0, 0, 0);\n    cameraRef.current = camera;\n\n    const ambientLight = new THREE.AmbientLight(0xffffff, 5);\n    scene.add(ambientLight);\n\n    const topLight = new THREE.PointLight(0xffffff, 3);\n    topLight.position.set(0, 15, 0);\n    topLight.castShadow = true;\n    topLight.shadow.mapSize.width = 2048;\n    topLight.shadow.mapSize.height = 2048;\n    topLight.shadow.camera.near = 5;\n    topLight.shadow.camera.far = 400;\n\n    scene.add(topLight);\n    scene.background = new THREE.Color('#f0f0f0');\n\n    const physicsWorld = new CANNON.World({\n      allowSleep: true,\n      gravity: new CANNON.Vec3(0, -50, 0),\n    });\n    physicsWorld.defaultContactMaterial.restitution = 0.3;\n    physicsWorldRef.current = physicsWorld;\n\n    const floor = new THREE.Mesh(\n      new THREE.CircleGeometry(5, 64),\n      new THREE.MeshStandardMaterial({ color: 0x006600 }) // 초록색 felt 느낌\n    );\n    floor.receiveShadow = true;\n    floor.rotation.x = -Math.PI / 2;\n    floor.position.y = -7; \n    scene.add(floor);\n\n    const floorBody = new CANNON.Body({\n      type: CANNON.Body.STATIC,\n      shape: new CANNON.Plane(),\n    });\n    floorBody.position.copy(floor.position as any);\n    floorBody.quaternion.setFromEuler(-Math.PI / 2, 0, 0);\n    physicsWorld.addBody(floorBody);\n\n    const wallRadius = 5;\n    const wallHeight = 7;\n    const wallThickness = 0.3;\n\n    // 비어 있는 원기둥으로 벽을 생성\n    const wall = new CANNON.Body({ type: CANNON.Body.STATIC });\n    const segments = 32;\n\n    for (let i = 0; i < segments; i++) {\n      const theta = (2 * Math.PI * i) / segments;\n      const x = Math.cos(theta) * wallRadius;\n      const z = Math.sin(theta) * wallRadius;\n\n      const box = new CANNON.Box(new CANNON.Vec3(wallThickness / 2, wallHeight / 2, 0.2));\n      const quaternion = new CANNON.Quaternion();\n      quaternion.setFromEuler(0, -theta, 0);\n\n      wall.addShape(box, new CANNON.Vec3(x, wallHeight / 2 - 7, z), quaternion);\n    }\n\n    physicsWorld.addBody(wall);\n\n    const ring = new THREE.Mesh(\n      new THREE.RingGeometry(wallRadius - wallThickness, wallRadius + wallThickness, 64),\n      new THREE.MeshStandardMaterial({ color: 0x8b4513, side: THREE.DoubleSide }) // 갈색 나무\n    );\n    ring.rotation.x = -Math.PI / 2;\n    ring.position.y = -7 + 0.01; // 살짝 위로\n    scene.add(ring);\n\n    const newDice = generateDice(params.numberOfDice, scene, physicsWorld); // generate DICE\n    diceArrayRef.current = newDice;\n\n    \n    let scored = false;\n\n    const render = () => {\n      physicsWorld.fixedStep();\n\n      let allSleeping = true;\n      let allArrived = true;\n\n      const speed = 0.3; // 한 프레임당 이동 거리\n\n      for (const dice of diceArrayRef.current) {\n        scored = false;\n        // 기존 위치/회전 복사\n        dice.mesh.position.copy(dice.body.position);\n        dice.mesh.quaternion.copy(dice.body.quaternion);\n\n        // 🔍 targetPosition 체크\n        if (dice.targetPosition) {\n          allArrived = false; // 아직 이동 중인 주사위 있음\n\n          const current = dice.mesh.position;\n          const target = dice.targetPosition;\n          const dist = current.distanceTo(target);\n\n          if (dist > 0.4) {\n            const direction = new THREE.Vector3().subVectors(target, current).normalize();\n            const move = direction.multiplyScalar(speed);\n            dice.mesh.position.add(move);\n            dice.body.position.copy(dice.mesh.position as any);\n          } else {\n            dice.mesh.position.copy(target);\n            dice.body.position.copy(new CANNON.Vec3(target.x, target.y, target.z));\n            dice.targetPosition = undefined;\n          }\n          dice.body.quaternion.copy(dice.body.quaternion);\n        }\n\n        // 💤 잠들었는지 체크\n        if (dice.body.sleepState !== CANNON.Body.SLEEPING) {\n          allSleeping = false;\n        }\n      }\n\n      // 점수 표시\n      if (allSleeping && allArrived && !scored) { \n        const selectedDiceList = Array.from(selectedDiceMapRef.current.values());      \n        if (selectedDiceList.length > 0) {\n          const scores = selectedDiceList.map(d => getTopFaceNumber(d.mesh.quaternion));\n          scoreRef.current!.innerHTML = scores.join(', ');\n          scored = true;\n        }else {\n          // 선택된 주사위가 없을 경우 점수 지우기\n          scoreRef.current!.innerHTML = '';\n        }\n      }\n\n      // 렌더링 반복\n      renderer.render(scene, camera);\n      requestAnimationFrame(render);\n    };\n\n\n    const initialThrow = () => {\n       if (rollCount >= maxRollCount) return;\n      scored = false;\n      if (!scoreResult) return;\n      scoreResult.innerHTML = '';\n      diceArrayRef.current.forEach((d, i) => {\n        if (d.selected) return; // 선택된 주사위는 고정\n\n        d.body.velocity.setZero();\n        d.body.angularVelocity.setZero();\n        d.body.position = new CANNON.Vec3(4, i * 1.5, 0);\n        d.mesh.position.copy(d.body.position);\n        d.mesh.rotation.set(2 * Math.PI * Math.random(), 0, 2 * Math.PI * Math.random());\n\n        const threeQuat = d.mesh.quaternion;\n        d.body.quaternion.set(threeQuat.x, threeQuat.y, threeQuat.z, threeQuat.w);\n\n        const force = 3 + 5 * Math.random();\n        d.body.applyImpulse(new CANNON.Vec3(-force, force, 0), new CANNON.Vec3(0, 0, 0.2));\n        d.body.allowSleep = true;\n        d.body.wakeUp(); // 반드시 wakeUp!\n      });\n\n      setRollCount(prev => prev + 1);\n    };\n\n    window.addEventListener('resize', () => {\n      camera.aspect = window.innerWidth / window.innerHeight;\n      camera.updateProjectionMatrix();\n      renderer.setSize(window.innerWidth, window.innerHeight);\n    });\n\n    initialThrow();\n    render();\n\n    const raycaster = new THREE.Raycaster();\n    const mouse = new THREE.Vector2();\n\n    const onClick = (event: MouseEvent) => {\n      if (!canvasRef.current || !cameraRef.current || !physicsWorldRef.current) return;\n\n      const rect = canvasRef.current.getBoundingClientRect();\n      mouse.x = ((event.clientX - rect.left) / rect.width) * 2 - 1;\n      mouse.y = -((event.clientY - rect.top) / rect.height) * 2 + 1;\n\n      raycaster.setFromCamera(mouse, cameraRef.current);\n\n      // 모든 주사위 (선택 여부 관계없이)에 대해 교차 검사\n      const intersects = raycaster.intersectObjects(\n        diceArrayRef.current.map(d => d.mesh),\n        true\n      );\n\n      if (intersects.length === 0) return;\n\n      const clickedMesh = intersects[0].object as THREE.Mesh;\n\n      // 클릭된 메시가 어떤 Dice 객체에 해당하는지 찾음\n      const clickedDice = diceArrayRef.current.find(d => d.mesh === clickedMesh);\n\n      if (!clickedDice) return; // 클릭된 메시가 주사위가 아니면 리턴\n\n      if (clickedDice.selected) {\n        // 🎯 이미 선택된 주사위를 다시 클릭 → 원래 상태로 복원\n        console.log(\"Clicked on an already selected dice. Restoring it.\");\n\n        clickedDice.selected = false;\n\n        // 물리 바디를 다시 활성화 (DYNAMIC)\n        clickedDice.body.velocity.setZero();\n        clickedDice.body.angularVelocity.setZero();\n\n\n        const original = clickedDice.stoppedPosition;\n\n        if (original) {\n          clickedDice.targetPosition = new THREE.Vector3(original.x, original.y, original.z);\n        }\n        // 저장해 둔 물리 시뮬레이션이 멈춘 위치/회전으로 복원\n        if (clickedDice.stoppedQuaternion) {\n          clickedDice.body.quaternion.copy(new CANNON.Quaternion(\n            clickedDice.stoppedQuaternion.x,\n            clickedDice.stoppedQuaternion.y,\n            clickedDice.stoppedQuaternion.z,\n            clickedDice.stoppedQuaternion.w\n          ));\n        }\n        clickedDice.body.type = CANNON.Body.DYNAMIC;\n        clickedDice.body.allowSleep = true;\n        //clickedDice.body.wakeUp(); // 물리 시뮬레이션에 참여하도록 깨우기\n\n        setSelectedMeshes(prev => prev.filter(m => m.uuid !== clickedDice.mesh.uuid));\n        setSelectedDiceMap(prev => {\n          const map = new Map(prev);\n          map.delete(clickedDice.mesh.uuid);\n\n          // 위치 재정렬\n          const updated = Array.from(map.values());\n          const newPositions = getDynamicFixedPositions(updated.length);\n\n          updated.forEach((d, i) => {\n            d.targetPosition = newPositions[i];\n          });\n\n          selectedDiceMapRef.current = map;\n          return map;\n        });\n        selectedCountRef.current -= 1;\n\n      } else {\n        // 🎲 선택되지 않은 주사위를 클릭 → 선택된 위치로 이동\n        console.log(\"Clicked on an unselected dice. Selecting it.\");\n\n        // 주사위가 멈춰있을 때만 선택 가능하도록 (선택 시점의 최종 위치 저장)\n        if (clickedDice.body.sleepState !== CANNON.Body.SLEEPING) {\n          console.log(\"Dice is still moving, cannot select.\");\n          return;\n        }\n\n        clickedDice.selected = true;\n        clickedDice.stoppedPosition = clickedDice.mesh.position.clone(); // 물리 시뮬레이션이 멈춘 위치 저장\n        clickedDice.stoppedQuaternion = clickedDice.mesh.quaternion.clone(); // 물리 시뮬레이션이 멈춘 회전 저장\n\n        // 물리 바디를 STATIC으로 변경하여 물리 시뮬레이션의 영향을 받지 않도록 함\n        clickedDice.body.type = CANNON.Body.STATIC;\n        clickedDice.body.allowSleep = false; // 더 이상 슬립 상태가 되면 안됨\n\n        // 화면상에서 주사위를 고정된 위치로 직접 이동\n        const currentSelectedCount = selectedCountRef.current;\n        const updatedPositions = getDynamicFixedPositions(currentSelectedCount + 1);\n        Array.from(selectedDiceMapRef.current.values()).forEach((d, index) => {\n          d.targetPosition = updatedPositions[index];\n        });\n\n        clickedDice.targetPosition = updatedPositions[currentSelectedCount];\n\n        // 물리 바디의 회전도 메시와 동기화\n        clickedDice.body.quaternion.copy(new CANNON.Quaternion(\n            clickedDice.mesh.quaternion.x,\n            clickedDice.mesh.quaternion.y,\n            clickedDice.mesh.quaternion.z,\n            clickedDice.mesh.quaternion.w\n        ));\n\n\n        setSelectedMeshes(prev => [...prev, clickedDice.mesh]);\n        setSelectedDiceMap(prev => {\n          const map = new Map(prev);\n          map.set(clickedDice.mesh.uuid, clickedDice);\n          selectedDiceMapRef.current = map;\n          console.log(\"✅ selectedDiceMap에 추가됨:\", clickedDice.mesh.uuid);\n          return map;\n        });\n        \n        selectedCountRef.current += 1;\n      }\n    };\n\n    canvas.addEventListener('click', onClick);\n    return () => {\n      canvas.removeEventListener('click', onClick);\n    };\n\n  }, []);\n  return (\n    <div className=\"relative w-full h-screen\">\n      {/* 시뮬레이터 canvas 전체화면 */}\n      <div className=\"absolute top-4 left-1/2 -translate-x-1/2 z-10\">\n        <h1 className=\"text-4xl font-bold text-black drop-shadow-lg\">YACHT GAME</h1>\n      </div>\n      <canvas ref={canvasRef} className=\"absolute top-0 left-0 w-full h-full z-0\" />\n      <div className=\"absolute top-4 left-4 z-10 bg-white px-3 py-2 rounded shadow text-gray-800 font-medium\">\n        선택된 주사위: {selectedMeshes.length}개\n      </div>\n      {/* 점수 및 버튼 (optional) */}\n      <div className=\"absolute bottom-4 left-1/2 -translate-x-1/2 z-10 text-center\">\n        <span ref={scoreRef} className=\"text-lg font-semibold bg-white px-4 py-2 rounded shadow\" />\n        <button\n            onClick={throwDice}\n            disabled={rollCount >= maxRollCount}\n            className={`ml-4 px-4 py-2 rounded shadow text-white ${\n              rollCount >= maxRollCount\n                ? 'bg-gray-400 cursor-not-allowed'\n                : 'bg-blue-500 hover:bg-blue-600'\n            }`}\n          >\n            Throw the Dice ({rollCount}/{maxRollCount})\n        </button>\n         <button\n          onClick={handleResetAndThrow}\n          className=\"ml-2 px-4 py-2 bg-green-500 text-white rounded shadow hover:bg-green-600\"\n        >\n          OK\n        </button>\n      </div> \n    </div>\n  );\n};\n\nexport default DiceRoller;"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 1218, "column": 0}, "map": {"version":3,"sources":["file:///Users/iseojin/Desktop/%E1%84%86%E1%85%A9%E1%86%AF%E1%84%8B%E1%85%B5%E1%86%B8%E1%84%8F%E1%85%A2%E1%86%B7%E1%84%91%E1%85%B3/week2/moleep-yacht-frontend/src/pages/dice.tsx"],"sourcesContent":["'use client';\n// src/pages/Dice.tsx\nimport React from 'react';\nimport DiceRoller from '../components/DiceRoller';\n\nconst Dice: React.FC = () => {\n  return (\n    <div>\n      <DiceRoller />\n    </div>\n  );\n};\n\nexport default Dice;\n"],"names":[],"mappings":";;;;AAGA;AAHA;;;AAKA,MAAM,OAAiB;IACrB,qBACE,0JAAC;kBACC,cAAA,0JAAC,4HAAA,CAAA,UAAU;;;;;;;;;;AAGjB;KANM;uCAQS","debugId":null}},
    {"offset": {"line": 1251, "column": 0}, "map": {"version":3,"sources":["turbopack:///[next]/entry/page-loader.ts"],"sourcesContent":["const PAGE_PATH = \"/dice\";\n\n/// <reference types=\"next/client\" />\n\n// inserted by rust code\ndeclare const PAGE_PATH: string\n\n  // Adapted from https://github.com/vercel/next.js/blob/b7f9f1f98fc8ab602e84825105b5727272b72e7d/packages/next/src/build/webpack/loaders/next-client-pages-loader.ts\n;(window.__NEXT_P = window.__NEXT_P || []).push([\n  PAGE_PATH,\n  () => {\n    return require('PAGE')\n  },\n])\n// @ts-expect-error module.hot exists\nif (module.hot) {\n  // @ts-expect-error module.hot exists\n  module.hot.dispose(function () {\n    window.__NEXT_P.push([PAGE_PATH])\n  })\n}\n"],"names":[],"mappings":"AAAA,MAAM,YAAY;AAQjB,CAAC,OAAO,QAAQ,GAAG,OAAO,QAAQ,IAAI,EAAE,EAAE,IAAI,CAAC;IAC9C;IACA;QACE;IACF;CACD;AACD,qCAAqC;AACrC,IAAI,OAAO,GAAG,EAAE;IACd,qCAAqC;IACrC,OAAO,GAAG,CAAC,OAAO,CAAC;QACjB,OAAO,QAAQ,CAAC,IAAI,CAAC;YAAC;SAAU;IAClC;AACF","ignoreList":[0],"debugId":null}}]
}