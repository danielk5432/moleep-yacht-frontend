{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///Users/iseojin/Desktop/%E1%84%86%E1%85%A9%E1%86%AF%E1%84%8B%E1%85%B5%E1%86%B8%E1%84%8F%E1%85%A2%E1%86%B7%E1%84%91%E1%85%B3/week2/moleep-yacht-frontend/src/app/components/DiceRoller.tsx"],"sourcesContent":["'use client';\n\nimport React, { useEffect, useRef, useState} from 'react';\nimport * as THREE from 'three';\nimport * as CANNON from 'cannon-es';\nimport { mergeGeometries, mergeVertices } from 'three/examples/jsm/utils/BufferGeometryUtils.js';\nimport SelectedDiceView from './SelectedDiceView';\n\ntype Dice = {\n  id: number;\n  mesh: THREE.Mesh;\n  body: CANNON.Body;\n  selected: boolean;\n  originalPosition: CANNON.Vec3;\n  finalPosition?: THREE.Vector3;\n  finalQuaternion?: THREE.Quaternion;\n};\n\nconst DiceRoller: React.FC = () => {\n  const canvasRef = useRef<HTMLCanvasElement | null>(null);\n  const scoreRef = useRef<HTMLSpanElement | null>(null);\n\n  const rendererRef = useRef<THREE.WebGLRenderer>(null);\n  const sceneRef = useRef<THREE.Scene>(null);\n  const cameraRef = useRef<THREE.PerspectiveCamera>(null);\n  const diceMeshRef = useRef<THREE.Mesh>(null);\n  const physicsWorldRef = useRef<CANNON.World>(null);\n  const diceArrayRef = useRef<Dice[]>([]);\n  const [selectedMeshes, setSelectedMeshes] = useState<THREE.Mesh[]>([]);\n  const [selectedDiceMap, setSelectedDiceMap] = useState<Map<string, Dice>>(new Map());\n  const selectedCountRef = useRef(0); // 선택된 주사위 개수 추적\n  const selectedMeshRefs = useRef<THREE.Mesh[]>([]);\n\n\n  const fixedPositions: THREE.Vector3[] = [\n    new THREE.Vector3(6, 0, 0),\n    new THREE.Vector3(6, 0, 2),\n    new THREE.Vector3(6, 0, -2),\n    new THREE.Vector3(6, 0, 4),\n    new THREE.Vector3(6, 0, -4),\n  ];\n\n  const params = {\n    numberOfDice: 5,\n    segments: 40,\n    edgeRadius: 0.07,\n    notchRadius: 0.15,\n    notchDepth: 0.1,\n  };\n\n  useEffect(() => {\n    const canvas = canvasRef.current;\n    const scoreResult = scoreRef.current;\n    if (!canvas || !scoreResult) return;\n\n    const renderer = new THREE.WebGLRenderer({ canvas, alpha: true, antialias: true });\n    renderer.shadowMap.enabled = true;\n    renderer.setPixelRatio(Math.min(window.devicePixelRatio, 2));\n    renderer.setSize(window.innerWidth, window.innerHeight - 100);\n    rendererRef.current = renderer;\n\n    const scene = new THREE.Scene();\n    sceneRef.current = scene;\n\n    const camera = new THREE.PerspectiveCamera(45, window.innerWidth / (window.innerHeight - 100), 0.1, 300);\n    camera.position.set(0, 15, 0);\n    camera.up.set(0, 0, -1);\n    camera.lookAt(0, 0, 0);\n    cameraRef.current = camera;\n\n    const ambientLight = new THREE.AmbientLight(0xffffff, 5);\n    scene.add(ambientLight);\n\n    const topLight = new THREE.PointLight(0xffffff, 3);\n    topLight.position.set(0, 15, 0);\n    topLight.castShadow = true;\n    topLight.shadow.mapSize.width = 2048;\n    topLight.shadow.mapSize.height = 2048;\n    topLight.shadow.camera.near = 5;\n    topLight.shadow.camera.far = 400;\n\n    scene.add(topLight);\n    scene.background = new THREE.Color('#f0f0f0');\n\n    const physicsWorld = new CANNON.World({\n      allowSleep: true,\n      gravity: new CANNON.Vec3(0, -50, 0),\n    });\n    physicsWorld.defaultContactMaterial.restitution = 0.3;\n    physicsWorldRef.current = physicsWorld;\n\n    const floor = new THREE.Mesh(\n      new THREE.CircleGeometry(5, 64),\n      new THREE.MeshStandardMaterial({ color: 0x006600 }) // 초록색 felt 느낌\n    );\n    floor.receiveShadow = true;\n    floor.rotation.x = -Math.PI / 2;\n    floor.position.y = -7; \n    scene.add(floor);\n\n    const floorBody = new CANNON.Body({\n      type: CANNON.Body.STATIC,\n      shape: new CANNON.Plane(),\n    });\n    floorBody.position.copy(floor.position as any);\n    floorBody.quaternion.setFromEuler(-Math.PI / 2, 0, 0);\n    physicsWorld.addBody(floorBody);\n\n\n\n    const wallRadius = 5;\n    const wallHeight = 2;\n    const wallThickness = 0.3;\n\n    // 비어 있는 원기둥으로 벽을 생성\n    const wall = new CANNON.Body({ type: CANNON.Body.STATIC });\n    const segments = 32;\n\n    for (let i = 0; i < segments; i++) {\n      const theta = (2 * Math.PI * i) / segments;\n      const x = Math.cos(theta) * wallRadius;\n      const z = Math.sin(theta) * wallRadius;\n\n      const box = new CANNON.Box(new CANNON.Vec3(wallThickness / 2, wallHeight / 2, 0.2));\n      const quaternion = new CANNON.Quaternion();\n      quaternion.setFromEuler(0, -theta, 0);\n\n      wall.addShape(box, new CANNON.Vec3(x, wallHeight / 2 - 7, z), quaternion);\n    }\n\n    physicsWorld.addBody(wall);\n\n    const ring = new THREE.Mesh(\n      new THREE.RingGeometry(wallRadius - wallThickness, wallRadius + wallThickness, 64),\n      new THREE.MeshStandardMaterial({ color: 0x8b4513, side: THREE.DoubleSide }) // 갈색 나무\n    );\n    ring.rotation.x = -Math.PI / 2;\n    ring.position.y = -7 + 0.01; // 살짝 위로\n    scene.add(ring);\n\n    function createDiceTextures(baseColor: string = '#ffffff') {\n      const textures : THREE.Texture[] =  [];\n      const dotRadius = 10;\n      const size = 100;\n\n      const dotPositions = [\n        [[1, 1]],\n        [[0, 0], [0, 2], [1, 0], [1, 2], [2, 0], [2, 2]],\n        [[0, 0], [2, 2]],\n        [[0, 0], [0, 2], [1, 1], [2, 0], [2, 2]],\n        [[0, 0], [1, 1], [2, 2]],\n        [[0, 0], [0, 2], [2, 0], [2, 2]],\n      ];\n\n      for (let i = 0; i < 6; i++) {\n        const canvas = document.createElement('canvas');\n        canvas.width = canvas.height = size;\n        const ctx = canvas.getContext('2d')!;\n\n        ctx.fillStyle = baseColor; // ✅ 배경색\n        ctx.fillRect(0, 0, size, size);\n\n        ctx.fillStyle = '#000000';\n        const spacing = size / 4;\n        for (const [row, col] of dotPositions[i]) {\n          ctx.beginPath();\n          ctx.arc(spacing * (col + 1), spacing * (row + 1), dotRadius, 0, Math.PI * 2);\n          ctx.fill();\n        }\n\n        textures.push(new THREE.CanvasTexture(canvas));\n      }\n\n      return textures;\n    }\n\n\n    function getTopFaceNumber(quaternion: THREE.Quaternion): number {\n      // 주사위의 로컬 Y+ 벡터 (윗면) → 월드 좌표계로 변환\n      const up = new THREE.Vector3(0, 1, 0);\n\n      // 각 면의 노멀과 숫자 매핑\n      const faceNormals = [\n        { normal: new THREE.Vector3(1, 0, 0), number: 1 },   // +X → texture[0]\n        { normal: new THREE.Vector3(-1, 0, 0), number: 6 },  // -X → texture[1]\n        { normal: new THREE.Vector3(0, 1, 0), number: 2 },   // +Y → texture[2]\n        { normal: new THREE.Vector3(0, -1, 0), number: 5 },  // -Y → texture[3]\n        { normal: new THREE.Vector3(0, 0, 1), number: 3 },   // +Z → texture[4]\n        { normal: new THREE.Vector3(0, 0, -1), number: 4 }   // -Z → texture[5]\n      ];\n\n      // 가장 유사한 노멀 (코사인 유사도 기반)\n      let maxDot = -Infinity;\n      let topNumber = 0;\n\n      for (const face of faceNormals) {\n        const dot = up.dot(face.normal.applyQuaternion(quaternion));\n        if (dot > maxDot) {\n          maxDot = dot;\n          topNumber = face.number;\n        }\n      }\n\n      return topNumber;\n    }\n\n    const createDiceMesh = (color: string) => {\n      const geometry = new THREE.BoxGeometry(1, 1, 1);\n      const textures = createDiceTextures();\n\n      const materials = textures.map(texture =>\n        new THREE.MeshStandardMaterial({\n          map: texture,\n          metalness: 0,\n          roughness: 0.3,\n        })\n      );\n\n      const mesh = new THREE.Mesh(geometry, materials);\n      mesh.castShadow = true;\n      return mesh;\n    };\n\n\n\n    const diceColors = ['#ffffff', '#ffdddd', '#ddffdd', '#ddddff', '#ffffdd'];\n\n    for (let i = 0; i < params.numberOfDice; i++) {\n      const index = i % diceColors.length;\n      const mesh = createDiceMesh(diceColors[index]);\n\n      scene.add(mesh);\n\n      const body = new CANNON.Body({\n        mass: 1,\n        shape: new CANNON.Box(new CANNON.Vec3(0.5, 0.5, 0.5)),\n        sleepTimeLimit: 0.1,\n      });\n\n      const initialPosition = new CANNON.Vec3(6, i * 1.5, 0);\n      body.position.copy(initialPosition);\n      mesh.position.copy(initialPosition);\n\n      physicsWorld.addBody(body);\n\n      diceArrayRef.current.push({\n        id: i,\n        mesh,\n        body,\n        selected: false,\n        originalPosition: initialPosition.clone(),\n        finalPosition: undefined,\n        finalQuaternion: undefined,\n      });\n    }\n\n    \n    let scored = false;\n\n    const render = () => {\n      physicsWorld.fixedStep();\n\n      let allSleeping = true;\n      for (const dice of diceArrayRef.current) {\n        dice.mesh.position.copy(dice.body.position);\n        dice.mesh.quaternion.copy(dice.body.quaternion);\n\n        if (dice.body.sleepState !== CANNON.Body.SLEEPING) {\n          allSleeping = false;\n        }\n      }\n\n      if (allSleeping && !scored) {\n        const scores = diceArrayRef.current.map(d => getTopFaceNumber(d.mesh.quaternion));\n        scoreRef.current!.innerHTML = scores.join(' + ') + ' = ' + scores.reduce((a, b) => a + b, 0);\n        scored = true;\n      }\n\n      renderer.render(scene, camera);\n      requestAnimationFrame(render);\n    };\n\n    const throwDice = () => {\n      scored = false;\n      if (!scoreResult) return;\n      scoreResult.innerHTML = '';\n      diceArrayRef.current.forEach((d, i) => {\n        d.body.velocity.setZero();\n        d.body.angularVelocity.setZero();\n        d.body.position = new CANNON.Vec3(6, i * 1.5, 0);\n        d.mesh.position.copy(d.body.position);\n        d.mesh.rotation.set(2 * Math.PI * Math.random(), 0, 2 * Math.PI * Math.random());\n\n        // ✅ three.js quaternion → cannon-es quaternion 변환\n        const threeQuat = d.mesh.quaternion;\n        d.body.quaternion.set(threeQuat.x, threeQuat.y, threeQuat.z, threeQuat.w);\n\n        const force = 3 + 5 * Math.random();\n        d.body.applyImpulse(new CANNON.Vec3(-force, force, 0), new CANNON.Vec3(0, 0, 0.2));\n        d.body.allowSleep = true;\n      });\n    };\n\n    window.addEventListener('resize', () => {\n      camera.aspect = window.innerWidth / window.innerHeight;\n      camera.updateProjectionMatrix();\n      renderer.setSize(window.innerWidth, window.innerHeight);\n    });\n\n    throwDice();\n    render();\n\n    const raycaster = new THREE.Raycaster();\n    const mouse = new THREE.Vector2();\n\n    const onClick = (event: MouseEvent) => {\n      const rect = canvas.getBoundingClientRect();\n      mouse.x = ((event.clientX - rect.left) / rect.width) * 2 - 1;\n      mouse.y = -((event.clientY - rect.top) / rect.height) * 2 + 1;\n\n      raycaster.setFromCamera(mouse, camera);\n      const intersects = raycaster.intersectObjects(\n        [...diceArrayRef.current.map(d => d.mesh), ...selectedMeshRefs.current]\n      );\n\n      if (intersects.length === 0) return;\n\n      const clickedMesh = intersects[0].object as THREE.Mesh;\n\n      // 🎯 복제 메시 클릭 → 복원\n      const matchedMesh = selectedMeshRefs.current.find(m => m.uuid === clickedMesh.uuid);\n\n\n      if (matchedMesh) {\n        console.log(\"hihi\");\n        const originalDice = selectedDiceMap.get(clickedMesh.uuid);\n        \n        if (!originalDice) {\n          console.warn('originalDice not found for uuid:', clickedMesh.uuid);\n          return;\n        }\n\n        // ✅ 복제 메시 제거\n        scene.remove(matchedMesh);\n        selectedMeshRefs.current = selectedMeshRefs.current.filter(m => m.uuid !== matchedMesh.uuid);\n\n        // ✅ 선택 상태 해제\n        originalDice.selected = false;\n\n        // ✅ 위치/회전 복원\n        if (originalDice.finalPosition && originalDice.finalQuaternion) {\n          originalDice.body.position.copy(new CANNON.Vec3(\n            originalDice.finalPosition.x,\n            originalDice.finalPosition.y,\n            originalDice.finalPosition.z\n          ));\n          originalDice.mesh.position.copy(originalDice.finalPosition);\n\n          originalDice.body.quaternion.copy(new CANNON.Quaternion(\n            originalDice.finalQuaternion.x,\n            originalDice.finalQuaternion.y,\n            originalDice.finalQuaternion.z,\n            originalDice.finalQuaternion.w\n          ));\n          originalDice.mesh.quaternion.copy(originalDice.finalQuaternion);\n        }\n\n        // ✅ 물리 속도 제거 및 wakeUp\n        originalDice.body.velocity.setZero();\n        originalDice.body.angularVelocity.setZero();\n        originalDice.body.wakeUp();\n\n        // ✅ 다시 scene에 추가\n        scene.add(originalDice.mesh);\n\n        // ✅ 상태 정리\n        setSelectedMeshes(prev => prev.filter(m => m.uuid !== clickedMesh.uuid));\n        setSelectedDiceMap(prev => {\n          const map = new Map(prev);\n          map.delete(clickedMesh.uuid);\n          return map;\n        });\n\n        selectedCountRef.current -= 1;\n        return;\n      }else console.log(\"byebye\");\n\n\n      // 🎲 원래 주사위 클릭 → 복제 및 이동\n      const diceItem = diceArrayRef.current.find(d => d.mesh === clickedMesh);\n      if (!diceItem || diceItem.selected) return;\n\n      diceItem.selected = true;\n      diceItem.finalPosition = diceItem.mesh.position.clone();\n      diceItem.finalQuaternion = diceItem.mesh.quaternion.clone();\n\n      scene.remove(diceItem.mesh);\n\n      // ✅ 현재 선택된 개수 기준 위치 계산\n      const currentSelectedCount = selectedCountRef.current;\n      const targetPosition = fixedPositions[currentSelectedCount] ?? new THREE.Vector3(8, currentSelectedCount * 1.5, 0);\n\n      const newMesh = diceItem.mesh.clone();\n      newMesh.userData.uuidForMap = newMesh.uuid; \n      \n      newMesh.userData.originalId = diceItem.id;     // 추적용 커스텀 필드\n      \n      newMesh.position.copy(targetPosition);\n      newMesh.quaternion.copy(diceItem.finalQuaternion);\n      newMesh.castShadow = true;\n      scene.add(newMesh);\n      selectedMeshRefs.current.push(newMesh);\n\n      setSelectedMeshes(prev => [...prev, newMesh]);\n      setSelectedDiceMap(prev => {\n        const map = new Map(prev);\n        map.set(newMesh.userData.uuidForMap, diceItem);\n        return map;\n      });\n\n      selectedCountRef.current += 1; // ✅ 수동 증가\n    };\n\n\n\n\n    canvas.addEventListener('click', onClick);\n    return () => {\n      canvas.removeEventListener('click', onClick);\n    };\n\n  }, []);\n  return (\n    <div className=\"relative w-full h-screen\">\n      {/* 시뮬레이터 canvas 전체화면 */}\n      <canvas ref={canvasRef} className=\"absolute top-0 left-0 w-full h-full z-0\" />\n      <div className=\"absolute top-4 left-4 z-10 bg-white px-3 py-2 rounded shadow text-gray-800 font-medium\">\n        선택된 주사위: {selectedMeshes.length}개\n      </div>\n      {/* 점수 및 버튼 (optional) */}\n      <div className=\"absolute bottom-4 left-1/2 -translate-x-1/2 z-10 text-center\">\n        \n        <span ref={scoreRef} className=\"text-lg font-semibold bg-white px-4 py-2 rounded shadow\" />\n        <button\n          onClick={() => window.location.reload()}\n          className=\"ml-4 px-4 py-2 bg-blue-500 text-white rounded shadow hover:bg-blue-600\"\n        >\n          Throw the Dice\n        </button>\n      </div>\n\n \n      \n    </div>\n  );\n};\n\nexport default DiceRoller;"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 568, "column": 0}, "map": {"version":3,"sources":["file:///Users/iseojin/Desktop/%E1%84%86%E1%85%A9%E1%86%AF%E1%84%8B%E1%85%B5%E1%86%B8%E1%84%8F%E1%85%A2%E1%86%B7%E1%84%91%E1%85%B3/week2/moleep-yacht-frontend/src/app/dice/page.tsx"],"sourcesContent":["'use client';\n// src/pages/Dice.tsx\nimport React from 'react';\nimport DiceRoller from '../components/DiceRoller';\n\nconst Dice: React.FC = () => {\n  return (\n    <div>\n      <h1 className = 'text-center'>🎲 Dice Game</h1>\n      <DiceRoller />\n    </div>\n  );\n};\n\nexport default Dice;\n"],"names":[],"mappings":";;;;AAGA;AAHA;;;AAKA,MAAM,OAAiB;IACrB,qBACE,6LAAC;;0BACC,6LAAC;gBAAG,WAAY;0BAAc;;;;;;0BAC9B,6LAAC,0IAAA,CAAA,UAAU;;;;;;;;;;;AAGjB;KAPM;uCASS","debugId":null}}]
}